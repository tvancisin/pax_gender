{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "LayerCake.svelte",
    "Html.svelte",
    "ScaledSvg.svelte",
    "Svg.svelte",
    "App.svelte",
    "Divider.svelte",
    "Filler.svelte",
    "Header.svelte",
    "Media.svelte",
    "ONSFooter.svelte",
    "ONSHeader.svelte",
    "Scroller.svelte",
    "Arrow.svelte",
    "Em.svelte",
    "Toggle.svelte",
    "IndividualLine.svelte",
    "Lines.svelte",
    "Map.svelte",
    "Text.svelte",
    "Timeline.svelte"
  ],
  "sourcesContent": [
    "<!--\n\t@component\n\tLayer Cake component\n -->\n<script>\n\timport { setContext, onMount } from 'svelte';\n\timport { writable, derived } from 'svelte/store';\n\n\timport makeAccessor from './utils/makeAccessor.js';\n\timport filterObject from './utils/filterObject.js';\n\timport debounce from './utils/debounce.js';\n\n\timport calcScaleExtents from './helpers/calcScaleExtents.js';\n\timport calcDomain from './helpers/calcDomain.js';\n\timport createScale from './helpers/createScale.js';\n\timport createGetter from './helpers/createGetter.js';\n\timport getRange from './helpers/getRange.js';\n\timport printDebug from './helpers/printDebug.js';\n\n\timport defaultScales from './settings/defaultScales.js';\n\n\tconst printDebug_debounced = debounce(printDebug, 200);\n\n\t/** @type {Boolean} [ssr=false] Whether this chart should be rendered server side. */\n\texport let ssr = false;\n\t/** @type {Boolean} [pointerEvents=true] Whether to allow pointer events via CSS. Set this to `false` to set `pointer-events: none;` on all components, disabling all mouse interaction. */\n\texport let pointerEvents = true;\n\t/** @type {String} [position='relative'] Determine the positioning of the wrapper div. Set this to `'absolute'` when you want to stack cakes. */\n\texport let position = 'relative';\n\t/** @type {Boolean} [percentRange=false] If `true`, set all scale ranges to `[0, 100]`. Ranges reversed via `xReverse`, `yReverse`, `zReverse` or `rReverse` props will continue to be reversed as usual. */\n\texport let percentRange = false;\n\n\t/** @type {Number} [width=containerWidth] Override the automated width. */\n\texport let width = undefined;\n\t/** @type {Number} [height=containerHeight] Override the automated height. */\n\texport let height = undefined;\n\n\t/** @type {Number} [containerWidth=100] The bound container width. */\n\texport let containerWidth = width || 100;\n\t/** @type {Number} [containerHeight=100] The bound container height. */\n\texport let containerHeight = height || 100;\n\n\t/**\t@type {Element} [element] The .layercake-container `<div>` tag. Useful for bindings. */\n\texport let element = undefined;\n\n\t/* --------------------------------------------\n\t * Parameters\n\t * Values that computed properties are based on and that\n\t * can be easily extended from config values\n\t *\n\t */\n\n\t/** @type {String|Function|Number|Array} x The x accessor. The key in each row of data that corresponds to the x-field. This can be a string, an accessor function, a number or an array of any combination of those types. This property gets converted to a function when you access it through the context. */\n\texport let x = undefined;\n\t/** @type {String|Function|Number|Array} y The y accessor. The key in each row of data that corresponds to the y-field. This can be a string, an accessor function, a number or an array of any combination of those types. This property gets converted to a function when you access it through the context. */\n\texport let y = undefined;\n\t/** @type {String|Function|Number|Array} z The z accessor. The key in each row of data that corresponds to the z-field. This can be a string, an accessor function, a number or an array of any combination of those types. This property gets converted to a function when you access it through the context. */\n\texport let z = undefined;\n\t/** @type {String|Function|Number|Array} r The r accessor. The key in each row of data that corresponds to the r-field. This can be a string, an accessor function, a number or an array of any combination of those types. This property gets converted to a function when you access it through the context. */\n\texport let r = undefined;\n\n\t/** @type {Array|Object} [data=[]] If `data` is not a flat array of objects and you want to use any of the scales, set a flat version of the data via the `flatData` prop. */\n\texport let data = [];\n\n\t/** @type {[min: Number|null, max: Number|null]|String[]|Number[]|Function} [xDomain] Set a min or max. For linear scales, if you want to inherit the value from the data's extent, set that value to `null`. This value can also be an array because sometimes your scales are [piecewise](https://github.com/d3/d3-scale#continuous_domain) or are a list of discrete values such as in [ordinal scales](https://github.com/d3/d3-scale#ordinal-scales), useful for color series. Set it to a function that receives the computed domain and lets you return a modified domain, useful for sorting values. */\n\texport let xDomain = undefined;\n\t/** @type {[min: Number|null, max: Number|null]|String[]|Number[]|Function} [yDomain] Set a min or max. For linear scales, if you want to inherit the value from the data's extent, set that value to `null`.  Set it to a function that receives the computed domain and lets you return a modified domain, useful for sorting values. */\n\texport let yDomain = undefined;\n\t/** @type {[min: Number|null, max: Number|null]|String[]|Number[]|Function} [zDomain] Set a min or max. For linear scales, if you want to inherit the value from the data's extent, set that value to `null`. This value can also be an array because sometimes your scales are [piecewise](https://github.com/d3/d3-scale#continuous_domain) or are a list of discrete values such as in [ordinal scales](https://github.com/d3/d3-scale#ordinal-scales), useful for color series. Set it to a function that receives the computed domain and lets you return a modified domain, useful for sorting values. */\n\texport let zDomain = undefined;\n\t/** @type {[min: Number|null, max: Number|null]|String[]|Number[]|Function} [rDomain] Set a min or max. For linear scales, if you want to inherit the value from the data's extent, set that value to `null`. This value can also be an array because sometimes your scales are [piecewise](https://github.com/d3/d3-scale#continuous_domain) or are a list of discrete values such as in [ordinal scales](https://github.com/d3/d3-scale#ordinal-scales), useful for color series. Set it to a function that receives the computed domain and lets you return a modified domain, useful for sorting values. */\n\texport let rDomain = undefined;\n\t/** @type {Boolean|Number} [xNice=false] Applies D3's [scale.nice()](https://github.com/d3/d3-scale#continuous_nice) to the x domain. */\n\texport let xNice = false;\n\t/** @type {Boolean|Number} [yNice=false] Applies D3's [scale.nice()](https://github.com/d3/d3-scale#continuous_nice) to the y domain. */\n\texport let yNice = false;\n\t/** @type {Boolean|Number} [zNice=false] Applies D3's [scale.nice()](https://github.com/d3/d3-scale#continuous_nice) to the z domain. */\n\texport let zNice = false;\n\t/** @type {Boolean} [rNice=false] Applies D3's [scale.nice()](https://github.com/d3/d3-scale#continuous_nice) to the r domain. */\n\texport let rNice = false;\n\t/** @type {[leftPixels: Number, rightPixels: Number]} [xPadding] Assign a pixel value to add to the min or max of the scale. This will increase the scales domain by the scale unit equivalent of the provided pixels. */\n\texport let xPadding = undefined;\n\t/** @type {[leftPixels: Number, rightPixels: Number]} [yPadding] Assign a pixel value to add to the min or max of the scale. This will increase the scales domain by the scale unit equivalent of the provided pixels. */\n\texport let yPadding = undefined;\n\t/** @type {[leftPixels: Number, rightPixels: Number]} [zPadding] Assign a pixel value to add to the min or max of the scale. This will increase the scales domain by the scale unit equivalent of the provided pixels. */\n\texport let zPadding = undefined;\n\t/** @type {[leftPixels: Number, rightPixels: Number]} [rPadding] Assign a pixel value to add to the min or max of the scale. This will increase the scales domain by the scale unit equivalent of the provided pixels. */\n\texport let rPadding = undefined;\n\t/** @type {Function} [xScale=d3.scaleLinear] The D3 scale that should be used for the x-dimension. Pass in an instantiated D3 scale if you want to override the default or you want to extra options. */\n\texport let xScale = defaultScales.x;\n\t/** @type {Function} [yScale=d3.scaleLinear] The D3 scale that should be used for the x-dimension. Pass in an instantiated D3 scale if you want to override the default or you want to extra options. */\n\texport let yScale = defaultScales.y;\n\t/** @type {Function} [zScale=d3.scaleLinear] The D3 scale that should be used for the x-dimension. Pass in an instantiated D3 scale if you want to override the default or you want to extra options. */\n\texport let zScale = defaultScales.z;\n\t/** @type {Function} [rScale=d3.scaleSqrt] The D3 scale that should be used for the x-dimension. Pass in an instantiated D3 scale if you want to override the default or you want to extra options. */\n\texport let rScale = defaultScales.r;\n\t/** @type {[min: Number, max: Number]|Function|String[]|Number[]} [xRange] Override the default x range of `[0, width]` by setting an array or function with argument `({ width, height})` that returns an array. Setting this prop overrides `xReverse`. This can also be a list of numbers or strings for scales with discrete ranges like [scaleThreshhold](https://github.com/d3/d3-scale#threshold-scales) or [scaleQuantize](https://github.com/d3/d3-scale#quantize-scales). */\n\texport let xRange = undefined;\n\t/** @type {[min: Number, max: Number]|Function|String[]|Number[]} [xRange] Override the default y range of `[0, height]` by setting an array or function with argument `({ width, height})` that returns an array. Setting this prop overrides `yReverse`. This can also be a list of numbers or strings for scales with discrete ranges like [scaleThreshhold](https://github.com/d3/d3-scale#threshold-scales) or [scaleQuantize](https://github.com/d3/d3-scale#quantize-scales). */\n\texport let yRange = undefined;\n\t/** @type {[min: Number, max: Number]|Function|String[]|Number[]} [zRange] Override the default z range of `[0, width]` by setting an array or function with argument `({ width, height})` that returns an array. Setting this prop overrides `zReverse`. This can also be a list of numbers or strings for scales with discrete ranges like [scaleThreshhold](https://github.com/d3/d3-scale#threshold-scales) or [scaleQuantize](https://github.com/d3/d3-scale#quantize-scales). */\n\texport let zRange = undefined;\n\t/** @type {[min: Number, max: Number]|Function|String[]|Number[]} [rRange] Override the default r range of `[1, 25]` by setting an array or function with argument `({ width, height})` that returns an array. Setting this prop overrides `rReverse`. This can also be a list of numbers or strings for scales with discrete ranges like [scaleThreshhold](https://github.com/d3/d3-scale#threshold-scales) or [scaleQuantize](https://github.com/d3/d3-scale#quantize-scales). */\n\texport let rRange = undefined;\n\t/** @type {Boolean} [xReverse=false] Reverse the default x range. By default this is `false` and the range is `[0, width]`. Ignored if you set the xRange prop. */\n\texport let xReverse = false;\n\t/** @type {Boolean} [yReverse=true] Reverse the default y range. By default this is `true` and the range is `[height, 0]` unless using an ordinal scale with a `.bandwidth` method for `yScale`. Ignored if you set the `yRange` prop. */\n\texport let yReverse = undefined\n\t/** @type {Boolean} [zReverse=false] Reverse the default z range. By default this is `false` and the range is `[0, width]`. Ignored if you set the zRange prop. */\n\texport let zReverse = false;\n\t/** @type {Boolean} [rReverse=false] Reverse the default r range. By default this is `false` and the range is `[1, 25]`. Ignored if you set the rRange prop. */\n\texport let rReverse = false;\n\t/** @type {{top?: Number, right?: Number, bottom?: Number, left?: Number}} [padding={}] The amount of padding to put around your chart. It operates like CSS box-sizing: border-box; where values are subtracted from the parent container's width and height, the same as a [D3 margin convention](https://bl.ocks.org/mbostock/3019563). */\n\texport let padding = {};\n\t/** @type {{ x?: [min: Number, max: Number], y?: [min: Number, max: Number], r?: [min: Number, max: Number], z?: [min: Number, max: Number] }} [extents] Manually set the extents of the x, y or r scale as a two-dimensional array of the min and max you want. Setting values here will skip any dynamic extent calculation of the data for that dimension. */\n\texport let extents = {};\n\n\t/** @type {Array} [flatData=data] A flat version of data. */\n\texport let flatData = undefined;\n\n\t/** @type {Object} custom Any extra configuration values you want available on the LayerCake context. This could be useful for color lookups or additional constants. */\n\texport let custom = {};\n\n\t/** @type {Boolean} debug Enable debug printing to the console. Useful to inspect your scales and dimensions. */\n\texport let debug = false;\n\n\t/**\n\t * Make this reactive\n\t */\n\t$: yReverseValue = typeof yReverse === 'undefined'\n\t\t? typeof yScale.bandwidth === 'function' ? false : true\n\t\t: yReverse;\n\n\t/* --------------------------------------------\n\t * Keep track of whether the component has mounted\n\t * This is used to emit warnings once we have measured\n\t * the container object and it doesn't have proper dimensions\n\t */\n\tlet isMounted = false;\n\tonMount(() => {\n\t\tisMounted = true;\n\t});\n\n\t/* --------------------------------------------\n\t * Preserve a copy of our passed in settings before we modify them\n\t * Return this to the user's context so they can reference things if need be\n\t * Add the active keys since those aren't on our settings object.\n\t * This is mostly an escape-hatch\n\t */\n\tconst config = {};\n\t$: if (x) config.x = x;\n\t$: if (y) config.y = y;\n\t$: if (z) config.z = z;\n\t$: if (r) config.r = r;\n\t$: if (xDomain) config.xDomain = xDomain;\n\t$: if (yDomain) config.yDomain = yDomain;\n\t$: if (zDomain) config.zDomain = zDomain;\n\t$: if (rDomain) config.rDomain = rDomain;\n\t$: if (xRange) config.xRange = xRange;\n\t$: if (yRange) config.yRange = yRange;\n\t$: if (zRange) config.zRange = zRange;\n\t$: if (rRange) config.rRange = rRange;\n\n\t/* --------------------------------------------\n\t * Make store versions of each parameter\n\t * Prefix these with `_` to keep things organized\n\t */\n\tconst _percentRange = writable(percentRange);\n\tconst _containerWidth = writable(containerWidth);\n\tconst _containerHeight = writable(containerHeight);\n\tconst _extents = writable(filterObject(extents));\n\tconst _data = writable(data);\n\tconst _flatData = writable(flatData || data);\n\tconst _padding = writable(padding);\n\tconst _x = writable(makeAccessor(x));\n\tconst _y = writable(makeAccessor(y));\n\tconst _z = writable(makeAccessor(z));\n\tconst _r = writable(makeAccessor(r));\n\tconst _xDomain = writable(xDomain);\n\tconst _yDomain = writable(yDomain);\n\tconst _zDomain = writable(zDomain);\n\tconst _rDomain = writable(rDomain);\n\tconst _xNice = writable(xNice);\n\tconst _yNice = writable(yNice);\n\tconst _zNice = writable(zNice);\n\tconst _rNice = writable(rNice);\n\tconst _xReverse = writable(xReverse);\n\tconst _yReverse = writable(yReverseValue);\n\tconst _zReverse = writable(zReverse);\n\tconst _rReverse = writable(rReverse);\n\tconst _xPadding = writable(xPadding);\n\tconst _yPadding = writable(yPadding);\n\tconst _zPadding = writable(zPadding);\n\tconst _rPadding = writable(rPadding);\n\tconst _xRange = writable(xRange);\n\tconst _yRange = writable(yRange);\n\tconst _zRange = writable(zRange);\n\tconst _rRange = writable(rRange);\n\tconst _xScale = writable(xScale);\n\tconst _yScale = writable(yScale);\n\tconst _zScale = writable(zScale);\n\tconst _rScale = writable(rScale);\n\tconst _config = writable(config);\n\tconst _custom = writable(custom);\n\n\t$: $_percentRange = percentRange;\n\t$: $_containerWidth = containerWidth;\n\t$: $_containerHeight = containerHeight;\n\t$: $_extents = filterObject(extents);\n\t$: $_data = data;\n\t$: $_flatData = flatData || data;\n\t$: $_padding = padding;\n\t$: $_x = makeAccessor(x);\n\t$: $_y = makeAccessor(y);\n\t$: $_z = makeAccessor(z);\n\t$: $_r = makeAccessor(r);\n\t$: $_xDomain = xDomain;\n\t$: $_yDomain = yDomain;\n\t$: $_zDomain = zDomain;\n\t$: $_rDomain = rDomain;\n\t$: $_xNice = xNice;\n\t$: $_yNice = yNice;\n\t$: $_zNice = zNice;\n\t$: $_rNice = rNice;\n\t$: $_xReverse = xReverse;\n\t$: $_yReverse = yReverseValue;\n\t$: $_zReverse = zReverse;\n\t$: $_rReverse = rReverse;\n\t$: $_xPadding = xPadding;\n\t$: $_yPadding = yPadding;\n\t$: $_zPadding = zPadding;\n\t$: $_rPadding = rPadding;\n\t$: $_xRange = xRange;\n\t$: $_yRange = yRange;\n\t$: $_zRange = zRange;\n\t$: $_rRange = rRange;\n\t$: $_xScale = xScale;\n\t$: $_yScale = yScale;\n\t$: $_zScale = zScale;\n\t$: $_rScale = rScale;\n\t$: $_custom = custom;\n\t$: $_config = config;\n\n\t/* --------------------------------------------\n\t * Create derived values\n\t * Suffix these with `_d`\n\t */\n\tconst activeGetters_d = derived([_x, _y, _z, _r], ([$x, $y, $z, $r]) => {\n\t\tconst obj = {};\n\t\tif ($x) {\n\t\t\tobj.x = $x;\n\t\t}\n\t\tif ($y) {\n\t\t\tobj.y = $y;\n\t\t}\n\t\tif ($z) {\n\t\t\tobj.z = $z;\n\t\t}\n\t\tif ($r) {\n\t\t\tobj.r = $r;\n\t\t}\n\t\treturn obj;\n\t});\n\n\tconst padding_d = derived([_padding, _containerWidth, _containerHeight], ([$padding]) => {\n\t\tconst defaultPadding = { top: 0, right: 0, bottom: 0, left: 0 };\n\t\treturn Object.assign(defaultPadding, $padding);\n\t});\n\n\tconst box_d = derived(\n\t\t[_containerWidth, _containerHeight, padding_d],\n\t\t([$containerWidth, $containerHeight, $padding]) => {\n\t\t\tconst b = {};\n\t\t\tb.top = $padding.top;\n\t\t\tb.right = $containerWidth - $padding.right;\n\t\t\tb.bottom = $containerHeight - $padding.bottom;\n\t\t\tb.left = $padding.left;\n\t\t\tb.width = b.right - b.left;\n\t\t\tb.height = b.bottom - b.top;\n\t\t\tif (b.width <= 0 && isMounted === true) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'[LayerCake] Target div has zero or negative width. Did you forget to set an explicit width in CSS on the container?'\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (b.height <= 0 && isMounted === true) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'[LayerCake] Target div has zero or negative height. Did you forget to set an explicit height in CSS on the container?'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn b;\n\t\t}\n\t);\n\n\tconst width_d = derived([box_d], ([$box]) => {\n\t\treturn $box.width;\n\t});\n\n\tconst height_d = derived([box_d], ([$box]) => {\n\t\treturn $box.height;\n\t});\n\n\t/* --------------------------------------------\n\t * Calculate extents by taking the extent of the data\n\t * and filling that in with anything set by the user\n\t * Note that this is different from an \"extent\" passed\n\t * in as a domain, which can be a partial domain\n\t */\n\tconst extents_d = derived(\n\t\t[_flatData, activeGetters_d, _extents, _xScale, _yScale, _rScale, _zScale],\n\t\t([$flatData, $activeGetters, $extents, $_xScale, $_yScale, $_rScale, $_zScale]) => {\n\t\t\tconst scaleLookup = { x: $_xScale, y: $_yScale, r: $_rScale, z: $_zScale };\n\t\t\tconst getters = filterObject($activeGetters, $extents);\n\t\t\tconst activeScales = Object.fromEntries(Object.keys(getters).map((k) => [k, scaleLookup[k]]));\n\n\t\t\tif (Object.keys(getters).length > 0) {\n\t\t\t\tconst calculatedExtents = calcScaleExtents($flatData, getters, activeScales);\n\t\t\t\treturn { ...calculatedExtents, ...$extents };\n\t\t\t} else {\n\t\t\t\treturn {};\n\t\t\t}\n\t\t}\n\t);\n\n\tconst xDomain_d = derived([extents_d, _xDomain], calcDomain('x'));\n\tconst yDomain_d = derived([extents_d, _yDomain], calcDomain('y'));\n\tconst zDomain_d = derived([extents_d, _zDomain], calcDomain('z'));\n\tconst rDomain_d = derived([extents_d, _rDomain], calcDomain('r'));\n\n\tconst xScale_d = derived(\n\t\t[\n\t\t\t_xScale,\n\t\t\textents_d,\n\t\t\txDomain_d,\n\t\t\t_xPadding,\n\t\t\t_xNice,\n\t\t\t_xReverse,\n\t\t\twidth_d,\n\t\t\theight_d,\n\t\t\t_xRange,\n\t\t\t_percentRange\n\t\t],\n\t\tcreateScale('x')\n\t);\n\tconst xGet_d = derived([_x, xScale_d], createGetter);\n\n\tconst yScale_d = derived(\n\t\t[\n\t\t\t_yScale,\n\t\t\textents_d,\n\t\t\tyDomain_d,\n\t\t\t_yPadding,\n\t\t\t_yNice,\n\t\t\t_yReverse,\n\t\t\twidth_d,\n\t\t\theight_d,\n\t\t\t_yRange,\n\t\t\t_percentRange\n\t\t],\n\t\tcreateScale('y')\n\t);\n\tconst yGet_d = derived([_y, yScale_d], createGetter);\n\n\tconst zScale_d = derived(\n\t\t[\n\t\t\t_zScale,\n\t\t\textents_d,\n\t\t\tzDomain_d,\n\t\t\t_zPadding,\n\t\t\t_zNice,\n\t\t\t_zReverse,\n\t\t\twidth_d,\n\t\t\theight_d,\n\t\t\t_zRange,\n\t\t\t_percentRange\n\t\t],\n\t\tcreateScale('z')\n\t);\n\tconst zGet_d = derived([_z, zScale_d], createGetter);\n\n\tconst rScale_d = derived(\n\t\t[\n\t\t\t_rScale,\n\t\t\textents_d,\n\t\t\trDomain_d,\n\t\t\t_rPadding,\n\t\t\t_rNice,\n\t\t\t_rReverse,\n\t\t\twidth_d,\n\t\t\theight_d,\n\t\t\t_rRange,\n\t\t\t_percentRange\n\t\t],\n\t\tcreateScale('r')\n\t);\n\tconst rGet_d = derived([_r, rScale_d], createGetter);\n\n\tconst xRange_d = derived([xScale_d], getRange);\n\tconst yRange_d = derived([yScale_d], getRange);\n\tconst zRange_d = derived([zScale_d], getRange);\n\tconst rRange_d = derived([rScale_d], getRange);\n\n\tconst aspectRatio_d = derived([width_d, height_d], ([$width, $height]) => {\n\t\treturn $width / $height;\n\t});\n\n\t$: context = {\n\t\tactiveGetters: activeGetters_d,\n\t\twidth: width_d,\n\t\theight: height_d,\n\t\tpercentRange: _percentRange,\n\t\taspectRatio: aspectRatio_d,\n\t\tcontainerWidth: _containerWidth,\n\t\tcontainerHeight: _containerHeight,\n\t\tx: _x,\n\t\ty: _y,\n\t\tz: _z,\n\t\tr: _r,\n\t\tcustom: _custom,\n\t\tdata: _data,\n\t\txNice: _xNice,\n\t\tyNice: _yNice,\n\t\tzNice: _zNice,\n\t\trNice: _rNice,\n\t\txReverse: _xReverse,\n\t\tyReverse: _yReverse,\n\t\tzReverse: _zReverse,\n\t\trReverse: _rReverse,\n\t\txPadding: _xPadding,\n\t\tyPadding: _yPadding,\n\t\tzPadding: _zPadding,\n\t\trPadding: _rPadding,\n\t\tpadding: padding_d,\n\t\tflatData: _flatData,\n\t\textents: extents_d,\n\t\txDomain: xDomain_d,\n\t\tyDomain: yDomain_d,\n\t\tzDomain: zDomain_d,\n\t\trDomain: rDomain_d,\n\t\txRange: xRange_d,\n\t\tyRange: yRange_d,\n\t\tzRange: zRange_d,\n\t\trRange: rRange_d,\n\t\tconfig: _config,\n\t\txScale: xScale_d,\n\t\txGet: xGet_d,\n\t\tyScale: yScale_d,\n\t\tyGet: yGet_d,\n\t\tzScale: zScale_d,\n\t\tzGet: zGet_d,\n\t\trScale: rScale_d,\n\t\trGet: rGet_d\n\t};\n\n\t$: setContext('LayerCake', context);\n\n\t$: if ($box_d && debug === true && (ssr === true || typeof window !== 'undefined')) {\n\t\t// Call this as a debounce so that it doesn't get called multiple times as these vars get filled in\n\t\tprintDebug_debounced({\n\t\t\tboundingBox: $box_d,\n\t\t\tactiveGetters: $activeGetters_d,\n\t\t\tx: config.x,\n\t\t\ty: config.y,\n\t\t\tz: config.z,\n\t\t\tr: config.r,\n\t\t\txScale: $xScale_d,\n\t\t\tyScale: $yScale_d,\n\t\t\tzScale: $zScale_d,\n\t\t\trScale: $rScale_d,\n\t\t});\n\t}\n</script>\n\n{#if ssr === true || typeof window !== 'undefined'}\n\t<div\n\t\tbind:this={element}\n\t\tclass=\"layercake-container\"\n\t\tstyle:position\n\t\tstyle:top={position === 'absolute' ? '0' : null}\n\t\tstyle:right={position === 'absolute' ? '0' : null}\n\t\tstyle:bottom={position === 'absolute' ? '0' : null}\n\t\tstyle:left={position === 'absolute' ? '0' : null}\n\t\tstyle:pointer-events={pointerEvents === false ? 'none' : null}\n\t\tbind:clientWidth={containerWidth}\n\t\tbind:clientHeight={containerHeight}\n\t>\n\t\t<slot\n\t\t\t{element}\n\t\t\twidth={$width_d}\n\t\t\theight={$height_d}\n\t\t\taspectRatio={$aspectRatio_d}\n\t\t\tcontainerWidth={$_containerWidth}\n\t\t\tcontainerHeight={$_containerHeight}\n\t\t\tactiveGetters={$activeGetters_d}\n\t\t\tpercentRange={$_percentRange}\n\t\t\tx={$_x}\n\t\t\ty={$_y}\n\t\t\tz={$_z}\n\t\t\tr={$_r}\n\t\t\tcustom={$_custom}\n\t\t\tdata={$_data}\n\t\t\txNice={$_xNice}\n\t\t\tyNice={$_yNice}\n\t\t\tzNice={$_zNice}\n\t\t\trNice={$_rNice}\n\t\t\txReverse={$_xReverse}\n\t\t\tyReverse={$_yReverse}\n\t\t\tzReverse={$_zReverse}\n\t\t\trReverse={$_rReverse}\n\t\t\txPadding={$_xPadding}\n\t\t\tyPadding={$_yPadding}\n\t\t\tzPadding={$_zPadding}\n\t\t\trPadding={$_rPadding}\n\t\t\tpadding={$padding_d}\n\t\t\tflatData={$_flatData}\n\t\t\textents={$extents_d}\n\t\t\txDomain={$xDomain_d}\n\t\t\tyDomain={$yDomain_d}\n\t\t\tzDomain={$zDomain_d}\n\t\t\trDomain={$rDomain_d}\n\t\t\txRange={$xRange_d}\n\t\t\tyRange={$yRange_d}\n\t\t\tzRange={$zRange_d}\n\t\t\trRange={$rRange_d}\n\t\t\tconfig={$_config}\n\t\t\txScale={$xScale_d}\n\t\t\txGet={$xGet_d}\n\t\t\tyScale={$yScale_d}\n\t\t\tyGet={$yGet_d}\n\t\t\tzScale={$zScale_d}\n\t\t\tzGet={$zGet_d}\n\t\t\trScale={$rScale_d}\n\t\t\trGet={$rGet_d}\n\t\t/>\n\t</div>\n{/if}\n\n<style>\n\t.layercake-container,\n\t.layercake-container :global(*) {\n\t\tbox-sizing: border-box;\n\t}\n\t.layercake-container {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n</style>\n",
    "<!--\n\t@component\n\tHTML layout component\n -->\n<script>\n\timport { getContext } from 'svelte';\n\n\tconst { padding } = getContext('LayerCake');\n\n\t/** @type {Element} [element] The layer's outermost `<div>` tag. Useful for bindings. */\n\texport let element = undefined;\n\n\t/** @type {Number} [zIndex] The layer's z-index. */\n\texport let zIndex = undefined;\n\n\t/** @type {Boolean} [pointerEvents] Set this to `false` to set `pointer-events: none;` on the entire layer. */\n\texport let pointerEvents = undefined;\n\n\t/** @type {String} [role] A string passed to the `aria-role` on the `<div>` tag. This is `undefined` by default but will be set by default to `'figure'` if `label`, `labelledby` or `describedby` is set. That default will be overridden by whatever is passed in. */\n\texport let role = undefined;\n\n\t/** @type {String} [label] A string passed to the `aria-label` on the `<div>` tag. */\n\texport let label = undefined;\n\n\t/** @type {String} [labelledBy] A string passed to the `aria-labelledby` on the `<div>` tag. */\n\texport let labelledBy = undefined;\n\n\t/** @type {String} [describedBy] A string passed to `aria-describedby` property on the `<div>` tag. */\n\texport let describedBy = undefined;\n\n\t$: roleVal = role || (label || labelledBy || describedBy ? 'figure' : undefined);\n</script>\n\n<div\n\tbind:this={element}\n\tclass=\"layercake-layout-html\"\n\tstyle:z-index={zIndex}\n\tstyle:pointer-events={pointerEvents === false ? 'none' : null}\n\tstyle:top={$padding.top + 'px'}\n\tstyle:right={$padding.right + 'px'}\n\tstyle:bottom={$padding.bottom + 'px'}\n\tstyle:left={$padding.left + 'px'}\n\trole={roleVal}\n\taria-label={label}\n\taria-labelledby={labelledBy}\n\taria-describedby={describedBy}\n>\n\t<slot {element}></slot>\n</div>\n\n<style>\n\tdiv,\n\tslot {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n</style>\n",
    "<!--\n\t@component\n\tScaled SVG layout component\n -->\n<script>\n\timport { getContext } from 'svelte';\n\n\tconst { padding } = getContext('LayerCake');\n\n\t/** @type {Element} [element] The layer's `<svg>` tag. Useful for bindings. */\n\texport let element = undefined;\n\n\t/** @type {Number} [zIndex] The layer's z-index. */\n\texport let zIndex = undefined;\n\n\t/** @type {Boolean} [pointerEvents] Set this to `false` to set `pointer-events: none;` on the entire layer. */\n\texport let pointerEvents = undefined;\n\n\t/** @type {Number} [fixedAspectRatio=1`] A number to set the aspect ratio onto the viewBox. */\n\texport let fixedAspectRatio = 1;\n\n\t/** @type {String} [viewBox=`0 0 100 ${100 / fixedAspectRatio}`] A string passed to the `viewBox` property on the `<svg>` tag. */\n\texport let viewBox = `0 0 100 ${100 / fixedAspectRatio}`;\n\t$: viewBox = `0 0 100 ${100 / fixedAspectRatio}`;\n\n\t/** @type {String} [label] A string passed to the `aria-label` on the `<svg>` tag. */\n\texport let label = undefined;\n\n\t/** @type {String} [labelledBy] A string passed to the `aria-labelledby` on the `<svg>` tag. */\n\texport let labelledBy = undefined;\n\n\t/** @type {String} [describedBy] A string passed to `aria-describedby` property on the `<svg>` tag. */\n\texport let describedBy = undefined;\n\n\t/** @type {String} [title] Shorthand to set the contents of `<title></title>` for accessibility. You can also set arbitrary HTML via the \"title\" slot but this is a convenient shorthand. If you use the \"title\" slot, this prop is ignored. */\n\texport let title = undefined;\n</script>\n\n<svg\n\tbind:this={element}\n\t{viewBox}\n\tpreserveAspectRatio=\"none\"\n\tstyle:z-index={zIndex}\n\tstyle:pointer-events={pointerEvents === false ? 'none' : null}\n\tstyle:top={$padding.top + 'px'}\n\tstyle:left={$padding.left + 'px'}\n\tstyle:width={`calc(100% - ${($padding.left + $padding.right)}px)`}\n\tstyle:height={`calc(100% - ${($padding.top + $padding.bottom)}px)`}\n\tstyle=\"right:0px; bottom:0px;\"\n\taria-label={label}\n\taria-labelledby={labelledBy}\n\taria-describedby={describedBy}\n>\n\t<slot name=\"title\">{#if title}<title>{title}</title>{/if}</slot>\n\n\t<defs>\n\t\t<slot name=\"defs\"></slot>\n\t</defs>\n\n\t<slot {element}></slot>\n</svg>\n\n<style>\n\tsvg {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: visible;\n\t}\n\tsvg :global(*) {\n\t\tvector-effect: non-scaling-stroke;\n\t}\n</style>\n",
    "<!--\n\t@component\n\tSVG layout component\n -->\n<script>\n\timport { getContext } from 'svelte';\n\n\t/** @type {Element} [element] The layer's `<svg>` tag. Useful for bindings. */\n\texport let element = undefined;\n\n\t/** @type {Element} [innerElement] The layer's `<g>` tag. Useful for bindings. */\n\texport let innerElement = undefined;\n\n\t/** @type {Number} [zIndex] The layer's z-index. */\n\texport let zIndex = undefined;\n\n\t/** @type {Boolean} [pointerEvents] Set this to `false` to set `pointer-events: none;` on the entire layer. */\n\texport let pointerEvents = undefined;\n\n\t/** @type {String} [viewBox] A string passed to the `viewBox` property on the `<svg>` tag. */\n\texport let viewBox = undefined;\n\n\t/** @type {String} [label] A string passed to the `aria-label` property on the `<svg>` tag. */\n\texport let label = undefined;\n\n\t/** @type {String} [labelledBy] A string passed to the `aria-labelledby property` on the `<svg>` tag. */\n\texport let labelledBy = undefined;\n\n\t/** @type {String} [describedBy] A string passed to the `aria-describedby` property on the `<svg>` tag. */\n\texport let describedBy = undefined;\n\n\t/** @type {String} [title] Shorthand to set the contents of `<title></title>` for accessibility. You can also set arbitrary HTML via the \"title\" slot but this is a convenient shorthand. If you use the \"title\" slot, this prop is ignored. */\n\texport let title = undefined;\n\n\tconst { containerWidth, containerHeight, padding } = getContext('LayerCake');\n</script>\n\n<svg\n\tbind:this={element}\n\tclass=\"layercake-layout-svg\"\n\t{viewBox}\n\twidth={$containerWidth}\n\theight={$containerHeight}\n\tstyle:z-index={zIndex}\n\tstyle:pointer-events={pointerEvents === false ? 'none' : null}\n\taria-label={label}\n\taria-labelledby={labelledBy}\n\taria-describedby={describedBy}\n>\n\t<slot name=\"title\">{#if title}<title>{title}</title>{/if}</slot>\n\n\t<defs>\n\t\t<slot name=\"defs\"></slot>\n\t</defs>\n\t<g\n\t\tbind:this={innerElement}\n\t\tclass=\"layercake-layout-svg_g\"\n\t\ttransform=\"translate({$padding.left}, {$padding.top})\">\n\t\t<slot {element}></slot>\n\t</g>\n</svg>\n\n<style>\n\tsvg {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\toverflow: visible;\n\t}\n</style>\n",
    "<script>\r\n\t// CORE IMPORTS\r\n\timport * as d3 from \"d3\";\r\n\timport { setContext, onMount } from \"svelte\";\r\n\timport { getMotion } from \"./utils.js\";\r\n\timport { themes } from \"./config.js\";\r\n\timport ONSHeader from \"./layout/ONSHeader.svelte\";\r\n\timport ONSFooter from \"./layout/ONSFooter.svelte\";\r\n\timport Header from \"./layout/Header.svelte\";\r\n\timport Section from \"./layout/Section.svelte\";\r\n\timport Media from \"./layout/Media.svelte\";\r\n\timport Scroller from \"./layout/Scroller.svelte\";\r\n\timport Filler from \"./layout/Filler.svelte\";\r\n\timport Divider from \"./layout/Divider.svelte\";\r\n\timport Toggle from \"./ui/Toggle.svelte\";\r\n\timport Arrow from \"./ui/Arrow.svelte\";\r\n\timport Em from \"./ui/Em.svelte\";\r\n\timport Lines from \"./vis/Lines.svelte\";\r\n\timport Timeline from \"./vis/Timeline.svelte\";\r\n\timport Text from \"./vis/Text.svelte\";\r\n\timport { setColors, getGEO, getCSV } from \"./utils.js\";\r\n\r\n\t// Set theme globally (options are 'light', 'dark' or 'lightblue')\r\n\tlet theme = \"light\";\r\n\tsetContext(\"theme\", theme);\r\n\tsetColors(themes, theme);\r\n\r\n\t// CONFIG FOR SCROLLER COMPONENTS\r\n\tconst threshold = 0.65;\r\n\t// State\r\n\tlet id = {}; // Object to hold visible section IDs of Scroller components\r\n\tlet idPrev = {}; // Object to keep track of previous IDs, to compare for changes\r\n\tonMount(() => {\r\n\t\tsetTimeout(() => {\r\n\t\t\twindow.scrollTo(0, 0);\r\n\t\t}, 500);\r\n\t\tidPrev = { ...id };\r\n\t});\r\n\r\n\t// Element bindings\r\n\tlet map = null; // Bound to mapbox 'map' instance once initialised\r\n\tlet step = null;\r\n\r\n\t// Actions for Scroller components\r\n\tconst actions = {\r\n\t\tmap: {\r\n\t\t\t// Actions for <Scroller/> with id=\"map\"\r\n\t\t\tmap01: () => {},\r\n\t\t\tmap02: () => {},\r\n\t\t\tmap03: () => {},\r\n\t\t\tmap04: () => {},\r\n\t\t},\r\n\t\ttext: {\r\n\t\t\ttext01: () => {\r\n\t\t\t\tstep = \"text_one\";\r\n\t\t\t\tpax_gender = pax_gender.sort(function (x, y) {\r\n\t\t\t\t\treturn d3.ascending(x.Dat, y.Dat);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\ttext02: () => {\r\n\t\t\t\tstep = \"text_two\";\r\n\t\t\t\tpax_gender = pax_gender.sort(function (x, y) {\r\n\t\t\t\t\treturn d3.ascending(x.wom_percent, y.wom_percent);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t},\r\n\t\tchart: {\r\n\t\t\tchart01: () => {\r\n\t\t\t\tstep = \"one\";\r\n\t\t\t},\r\n\t\t\tchart02: () => {\r\n\t\t\t\tstep = \"two\";\r\n\t\t\t},\r\n\t\t\tchart03: () => {\r\n\t\t\t\tstep = \"three\";\r\n\t\t\t},\r\n\t\t\tchart04: () => {\r\n\t\t\t\tstep = \"four\";\r\n\t\t\t},\r\n\t\t},\r\n\t\ttime: {\r\n\t\t\ttime01: () => {\r\n\t\t\t\tstep = \"1\";\r\n\t\t\t},\r\n\t\t\ttime02: () => {\r\n\t\t\t\tstep = \"2\";\r\n\t\t\t},\r\n\t\t\ttime03: () => {\r\n\t\t\t\tstep = \"3\";\r\n\t\t\t},\r\n\t\t\ttime04: () => {\r\n\t\t\t\tstep = \"4\";\r\n\t\t\t},\r\n\t\t\ttime05: () => {\r\n\t\t\t\tstep = \"5\";\r\n\t\t\t},\r\n\t\t\ttime06: () => {\r\n\t\t\t\tstep = \"6\";\r\n\t\t\t},\r\n\t\t\ttime07: () => {\r\n\t\t\t\tstep = \"7\";\r\n\t\t\t},\r\n\t\t\ttime08: () => {\r\n\t\t\t\tstep = \"8\";\r\n\t\t\t},\r\n\t\t\ttime09: () => {\r\n\t\t\t\tstep = \"9\";\r\n\t\t\t},\r\n\t\t\ttime10: () => {\r\n\t\t\t\tstep = \"10\";\r\n\t\t\t},\r\n\t\t\ttime11: () => {\r\n\t\t\t\tstep = \"11\";\r\n\t\t\t},\r\n\t\t\ttime12: () => {\r\n\t\t\t\tstep = \"12\";\r\n\t\t\t},\r\n\t\t\ttime13: () => {\r\n\t\t\t\tstep = \"13\";\r\n\t\t\t},\r\n\t\t\ttime14: () => {\r\n\t\t\t\tstep = \"14\";\r\n\t\t\t},\r\n\t\t\ttime15: () => {\r\n\t\t\t\tstep = \"15\";\r\n\t\t\t},\r\n\t\t\ttime16: () => {\r\n\t\t\t\tstep = \"16\";\r\n\t\t\t},\r\n\t\t\ttime17: () => {\r\n\t\t\t\tstep = \"17\";\r\n\t\t\t},\r\n\t\t\ttime18: () => {\r\n\t\t\t\tstep = \"18\";\r\n\t\t\t},\r\n\t\t\ttime19: () => {\r\n\t\t\t\tstep = \"19\";\r\n\t\t\t},\r\n\t\t\ttime20: () => {\r\n\t\t\t\tstep = \"20\";\r\n\t\t\t},\r\n\t\t\ttime21: () => {\r\n\t\t\t\tstep = \"21\";\r\n\t\t\t},\r\n\t\t\ttime22: () => {\r\n\t\t\t\tstep = \"22\";\r\n\t\t\t},\r\n\t\t\ttime23: () => {\r\n\t\t\t\tstep = \"23\";\r\n\t\t\t},\r\n\t\t\ttime24: () => {\r\n\t\t\t\tstep = \"24\";\r\n\t\t\t},\r\n\t\t\ttime25: () => {\r\n\t\t\t\tstep = \"25\";\r\n\t\t\t},\r\n\t\t\ttime26: () => {\r\n\t\t\t\tstep = \"26\";\r\n\t\t\t},\r\n\t\t\ttime27: () => {\r\n\t\t\t\tstep = \"27\";\r\n\t\t\t},\r\n\t\t\ttime28: () => {\r\n\t\t\t\tstep = \"28\";\r\n\t\t\t},\r\n\t\t\ttime29: () => {\r\n\t\t\t\tstep = \"29\";\r\n\t\t\t},\r\n\t\t\ttime30: () => {\r\n\t\t\t\tstep = \"30\";\r\n\t\t\t},\r\n\t\t\ttime31: () => {\r\n\t\t\t\tstep = \"31\";\r\n\t\t\t},\r\n\t\t\ttime32: () => {\r\n\t\t\t\tstep = \"32\";\r\n\t\t\t},\r\n\t\t\ttime33: () => {\r\n\t\t\t\tstep = \"33\";\r\n\t\t\t},\r\n\t\t\ttime34: () => {\r\n\t\t\t\tstep = \"34\";\r\n\t\t\t},\r\n\t\t\ttime35: () => {\r\n\t\t\t\tstep = \"35\";\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\r\n\t// Code to run Scroller actions when new caption IDs come into view\r\n\tfunction runActions(codes = []) {\r\n\t\tcodes.forEach((code) => {\r\n\t\t\tif (id[code] != idPrev[code]) {\r\n\t\t\t\tif (actions[code][id[code]]) {\r\n\t\t\t\t\tactions[code][id[code]]();\r\n\t\t\t\t}\r\n\t\t\t\tidPrev[code] = id[code];\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t// Run above code when 'id' object changes\r\n\t$: id && runActions(Object.keys(actions));\r\n\r\n\t//LOAD GEOJSON\r\n\tlet mygeojson;\r\n\tconst myjson_path = \"./data/custom.geo.json\";\r\n\tgetGEO(myjson_path).then((geo) => {\r\n\t\tmygeojson = geo;\r\n\t});\r\n\r\n\t//LOAD PAX\r\n\tlet path = [\r\n\t\t\"./data/pax.csv\",\r\n\t\t\"./data/pax_gender.csv\",\r\n\t\t\"./data/pax_central_points.csv\",\r\n\t\t\"./data/pax_gender_text.csv\",\r\n\t\t\"./data/text_corr.csv\",\r\n\t];\r\n\tlet pax;\r\n\tlet pax_gender;\r\n\tlet pax_gender_text;\r\n\tlet corr_text;\r\n\tlet pax_gender_timeline;\r\n\tlet pax_timeline;\r\n\tlet central_points;\r\n\tgetCSV(path).then((data) => {\r\n\t\tpax = data[0];\r\n\t\tpax_gender = data[1];\r\n\t\tcentral_points = data[2];\r\n\t\tpax_gender_text = data[3];\r\n\t\tpax_gender_text = data[3];\r\n\t\tcorr_text = data[4];\r\n\r\n\t\t// add text to every pax_gender agt\r\n\t\tpax_gender.forEach((genderItem) => {\r\n\t\t\tconst item = pax_gender_text.find(\r\n\t\t\t\t(gender) => gender.AgtId === genderItem.AgtId,\r\n\t\t\t);\r\n\r\n\t\t\tconst find_corr = corr_text.find(\r\n\t\t\t\t(gender) => gender.AgtId === genderItem.AgtId,\r\n\t\t\t);\r\n\r\n\t\t\tconst full_text = +find_corr.Text_length;\r\n\t\t\tconst women_text = item.GeWom.length;\r\n\t\t\tconst wom_percentage = (women_text / full_text) * 100;\r\n\r\n\t\t\tif (item) {\r\n\t\t\t\tgenderItem.text = item.GeWom;\r\n\t\t\t\tgenderItem.wom_percent = wom_percentage;\r\n\t\t\t\tgenderItem.corr_char_no = +find_corr.Text_length;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Iterate through each object in the pax array\r\n\t\tpax.forEach((paxItem) => {\r\n\t\t\t// Find the corresponding item in pax_gender with the same AgtId\r\n\t\t\tconst genderItem = pax_gender.find(\r\n\t\t\t\t(gender) => gender.AgtId === paxItem.AgtId,\r\n\t\t\t);\r\n\r\n\t\t\t// If a matching item is found, add the WggPar and WggImplSign values\r\n\t\t\tif (genderItem) {\r\n\t\t\t\tpaxItem.WggPar = genderItem.WggPar;\r\n\t\t\t\tpaxItem.WggImplSign = genderItem.WggImplSign;\r\n\t\t\t} else {\r\n\t\t\t\t// Optionally handle cases where no matching item is found\r\n\t\t\t\tpaxItem.WggPar = \"0\";\r\n\t\t\t\tpaxItem.WggImplSign = \"0\";\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tpax.sort(function (x, y) {\r\n\t\t\treturn d3.ascending(x.Dat.substring(6, 10), y.Dat.substring(6, 10));\r\n\t\t});\r\n\r\n\t\t//group by date for timeline vis\r\n\t\tpax_gender_timeline = d3.groups(pax_gender, (d) =>\r\n\t\t\td.Dat.substring(0, 4),\r\n\t\t);\r\n\t\tpax_timeline = d3.groups(pax, (d) => d.Dat.substring(6, 10));\r\n\t});\r\n</script>\r\n\r\n<ONSHeader filled={false} center={false} />\r\n\r\n<Header\r\n\tbgcolor=\"white\"\r\n\tbgfixed={false}\r\n\ttheme=\"light\"\r\n\tcenter={true}\r\n\tshort={false}\r\n>\r\n\t<h1>PA-X Gender</h1>\r\n\t<p style=\"margin-top: 5px\">\r\n\t\tThis scrollytelling visualization uses PA-X Gender database to show how\r\n\t\tand to what <br />\r\n\t\textent is gender taken into consideration in peacebuilding across the world.\r\n\t</p>\r\n</Header>\r\n\r\n<!-- <Filler theme=\"light\" short={true} wide={true} center={true}>\r\n\t<p class=\"text-big\">How many agreements mention gender?</p>\r\n</Filler> -->\r\n\r\n<Scroller {threshold} bind:id={id[\"chart\"]} splitscreen={false}>\r\n\t<div slot=\"background\">\r\n\t\t<figure>\r\n\t\t\t<div class=\"col-wide height-full\">\r\n\t\t\t\t{#if pax}\r\n\t\t\t\t\t<div class=\"chart\">\r\n\t\t\t\t\t\t<Lines {pax} {pax_gender} {step} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t{/if}\r\n\t\t\t</div>\r\n\t\t</figure>\r\n\t</div>\r\n\r\n\t<div slot=\"foreground\">\r\n\t\t<section data-id=\"chart01\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">\r\n\t\t\t\t\tEvery line represents one of <strong>2055 agreements</strong\r\n\t\t\t\t\t> in PA-X database.\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"chart02\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">\r\n\t\t\t\t\t<strong>436 agreements</strong> contain information about\r\n\t\t\t\t\t<strong> women, girls, gender or sexual violence.</strong>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"chart03\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">\r\n\t\t\t\t\tWomen <strong>directly participated</strong> in the creation\r\n\t\t\t\t\tof the agreement in\r\n\t\t\t\t\t<strong>177 cases.</strong>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"chart04\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">\r\n\t\t\t\t\tSigning or witnessing of agreement \"as women\" was recorded <strong\r\n\t\t\t\t\t\t>52 times since 1990.</strong\r\n\t\t\t\t\t>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t</div>\r\n</Scroller>\r\n\r\n<Filler theme=\"light\" short={true} wide={true} center={true}>\r\n\t<p class=\"text-big\">\r\n\t\tHow much text is dedicated to women, girls, gender or sexual violence in\r\n\t\tpeace agreements?\r\n\t</p>\r\n</Filler>\r\n\r\n<Scroller {threshold} bind:id={id[\"text\"]} splitscreen={false}>\r\n\t<div slot=\"background\">\r\n\t\t<figure>\r\n\t\t\t<div class=\"col-wide height-full\">\r\n\t\t\t\t<div class=\"text\">\r\n\t\t\t\t\t<Text {pax_gender} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</figure>\r\n\t</div>\r\n\r\n\t<div slot=\"foreground\">\r\n\t\t<section data-id=\"text01\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">Organized by years</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"text02\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">\r\n\t\t\t\t\tOrganized by the amount of wgg content.\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t</div>\r\n</Scroller>\r\n\r\n<Filler theme=\"light\" short={true} wide={true} center={true}>\r\n\t<p class=\"text-big\">\r\n\t\tWhat kind of references to women, girls, and sexual violence are in\r\n\t\tthese peace agreements?\r\n\t</p>\r\n</Filler>\r\n\r\n<Scroller {threshold} bind:id={id[\"close_read\"]} splitscreen={false}>\r\n\t<div slot=\"background\">\r\n\t\t<figure>\r\n\t\t\t<div class=\"col-wide height-full\">\r\n\t\t\t\t<div class=\"text\">\r\n\t\t\t\t\t<img id=\"agreement\" src=\"./img/agt.PNG\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</figure>\r\n\t</div>\r\n\r\n\t<div slot=\"foreground\">\r\n\t\t<section data-id=\"close01\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">Text</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"close02\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">Text</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t</div>\r\n</Scroller>\r\n\r\n<Filler theme=\"light\" short={true} wide={true} center={true}>\r\n\t<p class=\"text-big\">Agreements over Time</p>\r\n</Filler>\r\n\r\n<Scroller {threshold} bind:id={id[\"time\"]} splitscreen={false}>\r\n\t<div slot=\"background\">\r\n\t\t<figure>\r\n\t\t\t<div class=\"col-wide height-full\">\r\n\t\t\t\t<div class=\"time\">\r\n\t\t\t\t\t<Timeline\r\n\t\t\t\t\t\t{mygeojson}\r\n\t\t\t\t\t\t{pax_gender_timeline}\r\n\t\t\t\t\t\t{pax_timeline}\r\n\t\t\t\t\t\t{pax_gender}\r\n\t\t\t\t\t\t{step}\r\n\t\t\t\t\t\t{central_points}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</figure>\r\n\t</div>\r\n\r\n\t<div slot=\"foreground\">\r\n\t\t<section data-id=\"time01\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">1990</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time02\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">1991</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time03\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">1992</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time04\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">1993</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time05\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">1994</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time06\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">1995</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time07\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">1996</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time08\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">1997</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time09\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">1998</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time10\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">1999</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time11\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">\r\n\t\t\t\t\tThe United Nations Security Council adopts resolution\r\n\t\t\t\t\t(S/RES/1325) on women and peace and security on 31 October\r\n\t\t\t\t\t2000.\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time12\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">2001</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time13\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">2002</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time14\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">2003</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time15\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">2004</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time16\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">2005</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time17\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">2006</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time18\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">2007</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time19\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">2008</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time20\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">2009</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time21\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">2010</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time22\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">2011</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time23\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">2012</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time24\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">2013</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time25\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">2014</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time26\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">2015</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time27\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">2016</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time28\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">2017</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time29\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">2018</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time30\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">2019</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time31\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">2020</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time32\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">2021</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time33\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">2022</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time34\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">2023</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t<section data-id=\"time35\">\r\n\t\t\t<div class=\"col-medium\">\r\n\t\t\t\t<p style=\"text-align: center;\">Reorder</p>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t</div>\r\n</Scroller>\r\n\r\n<!-- <ONSFooter /> -->\r\n\r\n<style>\r\n\t/* Styles specific to elements within the demo */\r\n\t:global(svelte-scroller-foreground) {\r\n\t\tpointer-events: none !important;\r\n\t}\r\n\t:global(svelte-scroller-foreground section div) {\r\n\t\tpointer-events: all !important;\r\n\t}\r\n\timg {\r\n\t\twidth: 20%;\r\n\t}\r\n\t#agreement {\r\n\t\twidth: 100%;\r\n\t}\r\n\t.chart,\r\n\t.close_read,\r\n\t.text,\r\n\t.time {\r\n\t\tmargin-top: 40px;\r\n\t\twidth: calc(100% - 5px);\r\n\t}\r\n\t/* select {\r\n\t\tmax-width: 350px;\r\n\t}\r\n\t.chart-full {\r\n\t\tmargin: 0 20px;\r\n\t}\r\n\t.chart-sml {\r\n\t\tfont-size: 0.85em;\r\n\t}\r\n\t.media {\r\n\t\tbackground-color: #f0f0f0;\r\n\t\tdisplay: -webkit-box;\r\n\t\tdisplay: -ms-flexbox;\r\n\t\tdisplay: flex;\r\n\t\t-webkit-box-orient: vertical;\r\n\t\t-webkit-box-direction: normal;\r\n\t\t-ms-flex-flow: column;\r\n\t\tflex-flow: column;\r\n\t\t-webkit-box-pack: center;\r\n\t\t-ms-flex-pack: center;\r\n\t\tjustify-content: center;\r\n\t\ttext-align: center;\r\n\t\tcolor: #aaa;\r\n\t} */\r\n</style>\r\n",
    "<script>\n\timport { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\n  export let theme = getContext('theme');\n  export let hr = true;\n</script>\n\n<section style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"col-medium\">\n    {#if hr}\n    <hr style=\"color: {themes[theme]['muted']}\"/>\n    {:else}\n    <hr style=\"color: {themes[theme]['muted']}; border: none;\"/>\n    {/if}\n\t</div>\n</section>\n\n<style>\n  hr {\n    width: 75px;\n    border: none;\n    border-top: 2px solid;\n    margin: 40px auto -10px auto;\n  }\n</style>\n\n",
    "<script>\n\timport { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\n\texport let theme = getContext('theme');\n\texport let center = true;\n\texport let wide = false;\n\texport let short = false;\n</script>\n\n<style>\n\tsection {\n\t\tpadding: 36px 0;\n\t}\n\t.short {\n\t\tmin-height: 70vh;\n\t}\n</style>\n\n<section style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"middle\" class:center class:col-medium={!wide} class:col-wide={wide} class:height-full={!short} class:short>\n\t\t<slot></slot>\n\t</div>\n</section>",
    "<script>\n  import { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\n\texport let theme = getContext('theme');\n  export let bgimage = null;\n  export let bgcolor = null;\n  export let bgfixed = false;\n  export let center = true;\n  export let short = false;\n\n  let style = '';\n\n  if (bgimage) {\n    style += `background-image: url(${bgimage});`;\n  } else {\n    style += 'background-image: none;';\n  }\n\n  if (bgfixed) {\n    style += ' background-attachment: fixed;';\n  }\n</script>\n\n<style>\n  .short {\n    min-height: 85vh;\n  }\n  .v-padded {\n    box-sizing: border-box;\n    padding: 40px 0;\n  }\n</style>\n\n<header style=\"color: {themes[theme]['text']}; background-color: {bgcolor ? bgcolor : themes[theme]['background']}; {style}\" class:short>\n\t<div class=\"v-padded col-wide middle\" style=\"position: relative\" class:short class:height-full={!short}>\n\t\t<div class:center>\n\t\t\t<slot></slot>\n    </div>\n\t</div>\n</header>",
    "<script>\n\timport { themes } from \"../config.js\";\n\timport { onMount, getContext } from \"svelte\";\n\timport { debounce } from \"debounce\";\n\n\tconst colWidths = {\n\t\tnarrow: 200,\n\t\tmedium: 300,\n\t\twide: 500,\n\t};\n\n\texport let theme = getContext(\"theme\");\n\texport let col = \"medium\";\n\texport let grid = null;\n\texport let caption = null;\n\texport let height = 200;\n\texport let gap = 12;\n\n\tlet gridClass = grid ? ` grid-${grid}` : '';\n\n\tlet nogrid = !(\"grid-gap\" in document.body.style);\n\t\n\tlet rowHeight = !Number.isNaN(height) ? height + \"px\" : height;\n\n\tlet gridGap = !Number.isNaN(gap) ? gap + \"px\" : gap;\n\n\t// The code below this point mimics CSS Grid functionality in IE 11\n\tconst minWidth = grid && colWidths[grid] ? colWidths[grid] : null;\n\n\tlet gridWidth;\n\tlet cols;\n\n\tlet el;\n\tlet divs;\n\tlet count;\n\n\tif (nogrid) {\n\t\tonMount(() => {\n\t\t\tresize();\n\t\t});\n\t}\n\n\tconst update = debounce(resize, 200);\n\n\tfunction resize() {\n\t\tif (el && !divs) {\n\t\t\tlet arr = [];\n\t\t\tlet children = el.childNodes;\n\t\t\tchildren.forEach((child) => {\n\t\t\t\tif (child.nodeName == \"DIV\") {\n\t\t\t\t\tarr.push(child);\n\t\t\t\t}\n\t\t\t});\n\t\t\tdivs = arr;\n\t\t}\n\t\tcount = divs.length;\n\t\tcols = !minWidth || gridWidth <= minWidth ? 1 : Math.floor(gridWidth / minWidth);\n\t\tmakeCols();\n\t}\n\n\tfunction makeCols() {\n\t\tlet r =\n\t\t\tMath.ceil(count / cols) > 1\n\t\t\t\t? `-ms-grid-rows: 1fr (${gap}px 1fr)[${\n\t\t\t\t\t\tMath.ceil(count / cols) - 1\n\t\t\t\t  }]; grid-template-rows: 1fr repeat(${\n\t\t\t\t\t\tMath.ceil(count / cols) - 1\n\t\t\t\t  }, ${gap}px 1fr);`\n\t\t\t\t: `-ms-grid-rows: 1fr; grid-template-rows: 1fr;`;\n\t\tlet c =\n\t\t\tcols > 1\n\t\t\t\t? `-ms-grid-columns: 1fr (${gap}px 1fr)[${\n\t\t\t\t\t\tcols - 1\n\t\t\t\t  }]; grid-template-columns: 1fr repeat(${cols - 1}, ${gap}px 1fr);`\n\t\t\t\t: \"\";\n\t\tel.style.cssText = r + c;\n\t\tdivs.forEach((div, i) => {\n\t\t\tlet col = (i % cols) * 2 + 1;\n\t\t\tlet row = Math.floor(i / cols) * 2 + 1;\n\t\t\tdiv.style.cssText = `-ms-grid-column: ${col}; -ms-grid-row: ${row}; grid-column: ${col}; grid-row: ${row}; min-height: ${rowHeight};`;\n\t\t});\n\t}\n\n\t$: nogrid && (minWidth || gridWidth) && update();\n</script>\n\n{#if nogrid}\n<figure style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"col-{col}\">\n\t\t<div bind:this={el} bind:clientWidth={gridWidth} class=\"grid-ms\">\n\t\t\t<slot></slot>\n\t\t</div>\n\t</div>\n</figure>\n{:else}\n<figure style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"col-{col}\">\n\t\t<div class=\"grid{gridClass}\" style=\"grid-gap: {gridGap}; min-height: {rowHeight}\">\n\t\t\t<slot></slot>\n\t\t</div>\n  </div>\n</figure>\n{/if}\n{#if caption}\n\t<caption style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t\t<div class=\"col-medium\">\n\t\t\t<div class=\"caption\">{@html caption}</div>\n\t\t</div>\n\t</caption>\n{/if}\n\n<style>\n\t.grid-ms {\n\t\tdisplay: grid;\n\t\tdisplay: -ms-grid;\n\t\t-ms-grid-columns: 1fr;\n\t\tgrid-template-columns: 1fr;\n\t\tmargin-top: 40px;\n\t}\n\t.grid {\n\t\tdisplay: -ms-grid;\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat(auto-fill, 100%);\n\t\tmargin: 40px 0 0 0;\n\t}\n\t.grid-narrow {\n\t\tgrid-template-columns: repeat(auto-fill, minmax(200px, 1fr)) !important;\n\t}\n\t.grid-medium {\n\t\tgrid-template-columns: repeat(auto-fill, minmax(300px, 1fr)) !important;\n\t}\n\t.grid-wide {\n\t\tgrid-template-columns: repeat(auto-fill, minmax(500px, 1fr)) !important;\n\t}\n\t:global(.grid > div) {\n\t\tmin-height: inherit;\n\t}\n</style>\n",
    "<script>\n\timport { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\n\texport let theme = getContext('theme');\n</script>\n\n<footer style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['pale']};\">\n\t<div class=\"col-wide\" data-analytics=\"footer\">\n\t\t<a href=\"https://www.ons.gov.uk/\">\n\t\t\t{#if theme == 'dark'}\n\t\t\t<img\n\t\t\t\tclass=\"logo-img\"\n\t\t\t\tsrc=\"./img/ons-logo-neg-en.svg\"\n\t\t\t\talt=\"Office for National Statistics\" />\n\t\t\t{:else}\n\t\t\t<img\n\t\t\t\tclass=\"logo-img\"\n\t\t\t\tsrc=\"./img/ons-logo-black-en.svg\"\n\t\t\t\talt=\"Office for National Statistics\" />\n\t\t\t{/if}\n\t\t</a>\n\t\t<ul>\n\t\t\t<li><a href=\"https://www.ons.gov.uk/aboutus/contactus\" class=\"link\" style=\"color: {themes[theme]['text']}\">Contact us</a></li>\n\t\t\t<li><a href=\"https://www.ons.gov.uk/help/privacynotice\" class=\"link\" style=\"color: {themes[theme]['text']}\">Cookies and privacy</a></li>\n\t\t</ul>\n\t\t<hr style=\"border-top-color: {themes[theme]['muted']}\" />\n\t\t<div class=\"license\">\n\t\t\t<svg class=\"ogl-img\" viewBox=\"0 0 59 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t<title>UK Open Government Licence</title>\n\t\t\t\t<path fill=\"{themes[theme]['muted']}\" d=\"M59,17.5v6.2H45.3V4l6.2-3.9v17.4H59z M33.6,13h9.8v10.7H43L40.6,21c-2.1,1.8-4.9,3-7.9,3 c-4.4,0-8.3-2.4-10.4-6.1c-2.1,3.6-5.9,6.1-10.4,6.1C5.4,23.9,0,18.6,0,12C0,5.4,5.4,0.1,11.9,0.1c4.5,0,8.4,2.5,10.4,6.1 c2.1-3.6,5.9-6.1,10.4-6.1c4.2,0,7.9,2.2,10.1,5.5l-5.2,3.3c-1-1.6-2.8-2.7-4.8-2.7C29.6,6.2,27,8.8,27,12s2.6,5.8,5.8,5.8 c1.5,0,2.8-0.5,3.8-1.4L33.6,13z M17.7,12c0-3.2-2.6-5.7-5.8-5.7S6.2,8.8,6.2,12s2.6,5.8,5.8,5.8S17.7,15.2,17.7,12z\"/>\n\t\t\t</svg>\n\t\t\tAll content is available under the\n\t\t\t<a\n\t\t\t\thref=\"https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/\"\n\t\t\t\tclass=\"link\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noopener\"\n\t\t\t\tstyle=\"color: {themes[theme]['text']}\">Open Government Licence v3.0</a>, \n\t\t\texcept where otherwise stated\n\t\t</div>\n\t</div>\n</footer>\n\n<style>\n\tfooter {\n\t\tpadding-bottom: 72px;\n\t\tpadding-top: 36px;\n\t\tfont-size: 18px;\n\t}\n\tfooter a.link {\n\t\t-webkit-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t\ttext-decoration: underline;\n\t\tdisplay: inline-block;\n\t}\n\tfooter a.link:hover {\n\t\ttext-decoration: none;\n\t}\n\tfooter a.link:active {\n\t\toutline: 3px solid transparent;\n\t\tbackground-color: #fd0;\n\t\t-webkit-box-shadow: 0 -2px #fd0, 0 4px #222;\n\t\tbox-shadow: 0 -2px #fd0, 0 4px #222;\n\t\tcolor: #222;\n\t\ttext-decoration: none;\n\t}\n\tfooter hr {\n\t\tmargin-bottom: 27px;\n\t\tmargin-top: 36px;\n\t\tborder: none;\n\t\tborder-top: 1px solid #777;\n\t}\n\tul {\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t}\n\tli {\n\t\tmargin-right: 18px;\n\t\tdisplay: inline-block;\n\t}\n\t.logo-img {\n\t\tmargin-bottom: 27px;\n\t}\n\t.ogl-img {\n\t\tmargin: 0 0.5rem 0.2rem 0;\n\t\twidth: 59px;\n\t\theight: 24px;\n\t\tvertical-align: middle;\n\t}\n\t.license {\n\t\tvertical-align: top;\n\t}\n\ta img:hover {\n\t\tcursor: pointer;\n\t}\n</style>",
    "<script>\r\n\timport { themes } from \"../config.js\";\r\n\timport { getContext } from \"svelte\";\r\n\r\n\texport let theme = getContext(\"theme\");\r\n\texport let filled = false;\r\n\texport let center = true;\r\n</script>\r\n\r\n<nav\r\n\tstyle=\"border-bottom-color: {themes[theme]['muted']}; {filled\r\n\t\t? 'background-color: ' + themes[theme]['background'] + ';'\r\n\t\t: ''}\"\r\n>\r\n\t<div class=\"col-wide middle\" style=\"margin-left:0px; margin-top:0px\" class:center>\r\n\t\t<a\r\n\t\t\thref=\"https://pax.peaceagreements.org/agreements/wggsearch\"\r\n\t\t\ttarget=\"_blank\"\r\n\t\t>\r\n\t\t\t<picture>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc=\"./img/logo.png\"\r\n\t\t\t\t\talt=\"Office for National Statistics\"\r\n\t\t\t\t/>\r\n\t\t\t</picture>\r\n\t\t</a>\r\n\t</div>\r\n</nav>\r\n\r\n<style>\r\n\tnav {\r\n\t\t-webkit-box-sizing: border-box;\r\n\t\tbox-sizing: border-box;\r\n\t\tposition: relative;\r\n\t\theight: 46px;\r\n\t\tmargin-bottom: -46px;\r\n\t\tz-index: 1;\r\n\t}\r\n\tpicture {\r\n\t\tposition: relative;\r\n\t\ttop: 3px;\r\n\t\tpadding: 0 5px;\r\n\t}\r\n\timg {\r\n\t\theight: 45px;\r\n\t}\r\n\ta img:hover {\r\n\t\tcursor: pointer;\r\n\t}\r\n</style>\r\n",
    "<script context=\"module\">\r\n\t// Based on svelte-scroller by Rich Harris\r\n\t// https://github.com/sveltejs/svelte-scroller\r\n\t// Patched to transpile to IE 11 and allow for split-screen view option\r\n\r\n\tconst handlers = [];\r\n\tlet manager;\r\n\r\n\tif (typeof window !== \"undefined\") {\r\n\t\tconst run_all = () => handlers.forEach((fn) => fn());\r\n\r\n\t\twindow.addEventListener(\"scroll\", run_all);\r\n\t\twindow.addEventListener(\"resize\", run_all);\r\n\t}\r\n\r\n\tif (typeof IntersectionObserver !== \"undefined\") {\r\n\t\tconst map = new Map();\r\n\r\n\t\tconst observer = new IntersectionObserver(\r\n\t\t\t(entries, observer) => {\r\n\t\t\t\tentries.forEach((entry) => {\r\n\t\t\t\t\tconst update = map.get(entry.target);\r\n\t\t\t\t\tconst index = handlers.indexOf(update);\r\n\r\n\t\t\t\t\tif (entry.isIntersecting) {\r\n\t\t\t\t\t\tif (index === -1) handlers.push(update);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tupdate();\r\n\t\t\t\t\t\tif (index !== -1) handlers.splice(index, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\trootMargin: \"400px 0px\", // TODO why 400?\r\n\t\t\t},\r\n\t\t);\r\n\r\n\t\tmanager = {\r\n\t\t\tadd: ({ outer, update }) => {\r\n\t\t\t\tconst { top, bottom } = outer.getBoundingClientRect();\r\n\r\n\t\t\t\tif (top < window.innerHeight && bottom > 0)\r\n\t\t\t\t\thandlers.push(update);\r\n\r\n\t\t\t\tmap.set(outer, update);\r\n\t\t\t\tobserver.observe(outer);\r\n\t\t\t},\r\n\r\n\t\t\tremove: ({ outer, update }) => {\r\n\t\t\t\tconst index = handlers.indexOf(update);\r\n\t\t\t\tif (index !== -1) handlers.splice(index, 1);\r\n\r\n\t\t\t\tmap.delete(outer);\r\n\t\t\t\tobserver.unobserve(outer);\r\n\t\t\t},\r\n\t\t};\r\n\t} else {\r\n\t\tmanager = {\r\n\t\t\tadd: ({ update }) => {\r\n\t\t\t\thandlers.push(update);\r\n\t\t\t},\r\n\r\n\t\t\tremove: ({ update }) => {\r\n\t\t\t\tconst index = handlers.indexOf(update);\r\n\t\t\t\tif (index !== -1) handlers.splice(index, 1);\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n</script>\r\n\r\n<script>\r\n\timport { onMount } from \"svelte\";\r\n\r\n\t// config\r\n\texport let top = 0;\r\n\texport let bottom = 1;\r\n\texport let threshold = 0.5;\r\n\texport let query = \"section\";\r\n\texport let parallax = false;\r\n\r\n\t// bindings\r\n\texport let index = 0;\r\n\texport let count = 0;\r\n\texport let offset = 0;\r\n\texport let progress = 0;\r\n\texport let visible = false;\r\n\texport let splitscreen = false; // Add class to allow for split screen option\r\n\texport let id = null;\r\n\r\n\tlet outer;\r\n\tlet bgContainer; // IE patch. Container binding to update inline style\r\n\tlet foreground;\r\n\tlet background;\r\n\tlet left;\r\n\tlet sections;\r\n\tlet wh = 0;\r\n\tlet fixed;\r\n\tlet offset_top;\r\n\tlet width = 1;\r\n\tlet height;\r\n\tlet inverted;\r\n\r\n\t$: top_px = Math.round(top * wh);\r\n\t$: bottom_px = Math.round(bottom * wh);\r\n\t$: threshold_px = Math.round(threshold * wh);\r\n\t$: top, bottom, threshold, parallax, update();\r\n\r\n\tonMount(() => {\r\n\t\tsections = foreground.querySelectorAll(query);\r\n\t\tcount = sections.length;\r\n\r\n\t\tupdate();\r\n\r\n\t\tconst scroller = { outer, update };\r\n\r\n\t\tmanager.add(scroller);\r\n\t\treturn () => manager.remove(scroller);\r\n\t});\r\n\r\n\t// IE patch. BG container style (fixed/unfixed) set via function\r\n\tfunction setFixed() {\r\n\t\tif (bgContainer) {\r\n\t\t\tlet style = `position: ${fixed ? \"fixed\" : \"absolute\"}; top: 0; transform: translate(0, ${offset_top}px); width: ${width}px; z-index: ${inverted ? 3 : 1};`;\r\n\t\t\tbgContainer.style.cssText = style;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction update() {\r\n\t\tif (!foreground) return;\r\n\r\n\t\t// re-measure outer container\r\n\t\tconst bcr = outer.getBoundingClientRect();\r\n\t\tleft = bcr.left;\r\n\t\twidth = bcr.right - bcr.left;\r\n\r\n\t\t// determine fix state\r\n\t\tconst fg = foreground.getBoundingClientRect();\r\n\t\tconst bg = background.getBoundingClientRect();\r\n\r\n\t\tvisible = fg.top < wh && fg.bottom > 0;\r\n\r\n\t\tconst foreground_height = fg.bottom - fg.top;\r\n\t\tconst background_height = bg.bottom - bg.top;\r\n\r\n\t\tconst available_space = bottom_px - top_px;\r\n\t\tprogress = (top_px - fg.top) / (foreground_height - available_space);\r\n\r\n\t\tif (progress <= 0) {\r\n\t\t\toffset_top = 0;\r\n\t\t\tif (fixed) {\r\n\t\t\t\tfixed = false;\r\n\t\t\t\tsetFixed();\r\n\t\t\t} // Non-IE specific patch to avoid setting style repeatedly\r\n\t\t} else if (progress >= 1) {\r\n\t\t\toffset_top = parallax\r\n\t\t\t\t? foreground_height - background_height\r\n\t\t\t\t: foreground_height - available_space;\r\n\t\t\tif (fixed) {\r\n\t\t\t\tfixed = false;\r\n\t\t\t\tsetFixed();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\toffset_top = parallax\r\n\t\t\t\t? Math.round(\r\n\t\t\t\t\t\ttop_px -\r\n\t\t\t\t\t\t\tprogress * (background_height - available_space),\r\n\t\t\t\t\t)\r\n\t\t\t\t: top_px;\r\n\t\t\tif (!fixed) {\r\n\t\t\t\tfixed = true;\r\n\t\t\t\tsetFixed();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (index = 0; index < sections.length; index += 1) {\r\n\t\t\tconst section = sections[index];\r\n\t\t\tconst { top } = section.getBoundingClientRect();\r\n\r\n\t\t\tconst next = sections[index + 1];\r\n\t\t\tconst bottom = next ? next.getBoundingClientRect().top : fg.bottom;\r\n\r\n\t\t\toffset = (threshold_px - top) / (bottom - top);\r\n\t\t\tid = section.dataset.id ? section.dataset.id : null;\r\n\t\t\tif (bottom >= threshold_px) break;\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<svelte:window bind:innerHeight={wh} />\r\n\r\n<svelte-scroller-outer bind:this={outer} class:splitscreen>\r\n\t<svelte-scroller-background-container\r\n\t\tclass=\"background-container\"\r\n\t\tbind:this={bgContainer}\r\n\t>\r\n\t\t<svelte-scroller-background bind:this={background}>\r\n\t\t\t<slot name=\"background\"></slot>\r\n\t\t</svelte-scroller-background>\r\n\t</svelte-scroller-background-container>\r\n\r\n\t<svelte-scroller-foreground bind:this={foreground}>\r\n\t\t<slot name=\"foreground\"></slot>\r\n\t</svelte-scroller-foreground>\r\n</svelte-scroller-outer>\r\n\r\n<style>\r\n\tsvelte-scroller-outer {\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\t\tmax-width: 100%;\r\n\t}\r\n\r\n\tsvelte-scroller-background {\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\tsvelte-scroller-foreground {\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\t\tz-index: 2;\r\n\t}\r\n\r\n\tsvelte-scroller-foreground::after {\r\n\t\tcontent: \" \";\r\n\t\tdisplay: block;\r\n\t\tclear: both;\r\n\t}\r\n\r\n\tsvelte-scroller-background-container {\r\n\t\tdisplay: block;\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 100%;\r\n\t\tpointer-events: none;\r\n\t\t/* height: 100%; */\r\n\r\n\t\t/* in theory this helps prevent jumping */\r\n\t\twill-change: transform;\r\n\t\t/* -webkit-transform: translate3d(0, 0, 0);\r\n\t\t-moz-transform: translate3d(0, 0, 0);\r\n\t\ttransform: translate3d(0, 0, 0); */\r\n\t}\r\n</style>\r\n",
    "<script>\n  export let color = \"black\";\n  export let animation = true;\n\texport let center = true;\n\n  const colors = [\"black\", \"white\"];\n\n  color = colors.includes(color) ? color : \"black\";\n</script>\n\n{#if center}\n<slot></slot><br/>\n<img src=\"./img/scroll-down-{color}.svg\" class=\"arrow\" class:bounce={animation} alt=\"\" aria-hidden=\"true\"/>\n{:else}\n<img src=\"./img/scroll-down-{color}.svg\" class=\"arrow left\" class:bounce={animation} alt=\"\" aria-hidden=\"true\"/><slot></slot>\n{/if}\n\n<style>\n\t.arrow {\n\t\twidth: 48px;\n\t\theight: 48px;\n\t}\n\t.left {\n\t\tmargin-right: 10px;\n\t}\n\t.bounce {\n\t\t-webkit-animation-duration: 2s;\n\t\t        animation-duration: 2s;\n\t\t-webkit-animation-iteration-count: infinite;\n\t\t        animation-iteration-count: infinite;\n\t\t-webkit-animation-name: bounce;\n\t\t        animation-name: bounce;\n\t\t-webkit-animation-timing-function: ease;\n\t\t        animation-timing-function: ease;\n\t}\n\t@-webkit-keyframes bounce {\n\t\t0%   { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t30%  { -webkit-transform: translateY(-10px); transform: translateY(-10px); }\n\t\t50%  { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t100% { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t}\n\t@keyframes bounce {\n\t\t0%   { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t30%  { -webkit-transform: translateY(-10px); transform: translateY(-10px); }\n\t\t50%  { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t100% { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t}\n</style>",
    "<script>\n  import parse from 'parse-color';\n\n  export let color = 'lightgrey';\n\texport let nowrap = true;\n\n  function textColor(rgb) {\n\t\tconst brightness = ((rgb[0] * 299) + (rgb[1] * 587) + (rgb[2] * 114)) / 1000;\n\t\treturn (brightness > 125) ? 'black' : 'white';\n\t}\n\n  let text = 'black';\n\n\t$: rgb = parse(color).rgb;\n\t\n\t$: if (rgb) {\n\t\ttext = textColor(rgb);\n\t}\n\n</script>\n\n<span class=\"em\" class:nowrap style=\"background-color: {color}; color: {text};\" role=\"presentation\">\n  <slot></slot>\n</span>\n\n<style>\n\t.em {\n\t\tpadding: 1px 4px 1px 4px;\n\t\tfont-weight: bold;\n\t}\n\t.nowrap {\n\t\twhite-space: nowrap;\n\t}\n</style>",
    "<script>\n  export let id = \"switch\";\n  export let label = \"Label\";\n  export let mono = false;\n  export let checked;\n</script>\n\n<div class=\"switch\">\n  <input bind:checked {id} type=\"checkbox\" class=\"switch-input\" tabindex=\"0\" />\n  <label for={id} class=\"switch-label\" class:mono>{label}</label>\n</div>\n\n<style>\n  .switch {\n    position: relative;\n    display: inline-block;\n  }\n  .switch-input {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    margin: -1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    border: 0;\n  }\n  .switch-label::before,\n  .switch-label::after {\n    content: \"\";\n    display: block;\n    position: absolute;\n    cursor: pointer;\n  }\n  .switch-label {\n    display: block;\n    cursor: pointer;\n    margin-top: -4px;\n    margin-left: 58px;\n  }\n  .switch-label::before {\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n    top: 0;\n    left: 0;\n    width: 48px;\n    height: 24px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    background-color: #aaa;\n    border-radius: 9999em;\n    -webkit-transition: background-color 0.25s ease;\n    -o-transition: background-color 0.25s ease;\n    transition: background-color 0.25s ease;\n  }\n  .switch-label::after {\n    top: 3px;\n    left: 3px;\n    width: 18px;\n    height: 18px;\n    border-radius: 50%;\n    background-color: #fff;\n    -webkit-transition: left 0.25s ease;\n    -o-transition: left 0.25s ease;\n    transition: left 0.25s ease;\n  }\n  .switch-input:checked + .switch-label::before {\n    background-color: rgb(32, 96, 149);\n  }\n  .switch-input:checked + .switch-label::after {\n    left: 27px;\n    top: 3px;\n  }\n\n  .mono::before {\n    border: 2px solid white;\n    background: none !important;\n  }\n</style>",
    "<script>\r\n    import { tweened } from \"svelte/motion\";\r\n    import { cubicOut } from \"svelte/easing\";\r\n    import * as d3 from \"d3\";\r\n    import { generateHandwrittenLine, lineGenerator } from \"../utils\";\r\n\r\n    export let x;\r\n    export let y;\r\n    export let width;\r\n    export let innerHeight;\r\n    export let entries;\r\n    export let reorder;\r\n\r\n    const tX = tweened(null, { duration: 1200, easing: cubicOut });\r\n    const tY = tweened(null, { duration: 1200, easing: cubicOut });\r\n\r\n    $: yScale = d3.scaleLinear().domain([0, 100]).range([0, 200]);\r\n    $: tX.set(x);\r\n    $: tY.set(y);\r\n\r\n    function assign_class(entry) {\r\n        if (entry.GeWom == \"1\") {\r\n            return \"women\";\r\n        }\r\n    }\r\n\r\n    $: if (reorder) {\r\n        entries = [...entries].sort((a, b) =>\r\n            assign_class(a) === \"women\" ? 1 : -1,\r\n        );\r\n    }\r\n    \r\n</script>\r\n\r\n<g transform=\"translate({$tX} {$tY})\">\r\n    {#each entries as entry, i}\r\n        <!-- <line\r\n            x1=\"0\"\r\n            x2={width}\r\n            y1={yScale(i)}\r\n            y2={yScale(i)}\r\n            stroke=\"#cccccc\"\r\n            class={assign_class(entry)}\r\n            stroke-width=\"1\"\r\n        /> -->\r\n        <path\r\n            d={lineGenerator(\r\n                generateHandwrittenLine(-5, yScale(i), width),\r\n            )}\r\n            fill=\"none\"\r\n            stroke=\"#cccccc\"\r\n            stroke-width=\"1\"\r\n            class={assign_class(entry)}\r\n        />\r\n    {/each}\r\n</g>\r\n\r\n<style>\r\n    .women {\r\n        stroke: black;\r\n    }\r\n</style>\r\n",
    "<script>\r\n    import * as d3 from \"d3\";\r\n    import { generateHandwrittenLine, lineGenerator } from \"../utils\";\r\n\r\n    export let pax;\r\n    export let pax_gender;\r\n    export let step;\r\n\r\n    let width = 400;\r\n    let height = 400;\r\n    let current_pax, def_pax, def_pax_gender;\r\n    let gap = 3;\r\n\r\n    current_pax = pax;\r\n    def_pax = pax;\r\n    def_pax_gender = pax_gender;\r\n\r\n    const margin = {\r\n        top: 10,\r\n        right: 10,\r\n        bottom: 10,\r\n        left: 10,\r\n    };\r\n\r\n    $: if (step == \"one\") {\r\n        current_pax = pax;\r\n        d3.selectAll(\".agt\").style(\"stroke\", \"black\");\r\n    } else if (step == \"two\") {\r\n        d3.selectAll(\".agt\").style(\"stroke\", \"#cccccc\");\r\n        d3.selectAll(\".gender\").style(\"stroke\", \"black\");\r\n    } else if (step == \"three\") {\r\n        d3.selectAll(\".agt\").style(\"stroke\", \"#cccccc\");\r\n        d3.selectAll(\".participation\").style(\"stroke\", \"black\");\r\n    } else if (step == \"four\") {\r\n        d3.selectAll(\".agt\").style(\"stroke\", \"#cccccc\");\r\n        d3.selectAll(\".signing\").style(\"stroke\", \"black\");\r\n    }\r\n\r\n    $: innerWidth = width - margin.left - margin.right;\r\n    $: innerHeight = height - margin.top - margin.bottom;\r\n\r\n    // Store initial number of rectangles to fix grid size\r\n    const initialPaxCount = pax.length;\r\n\r\n    // Dynamically calculate the number of columns based on the width and the initial pax count\r\n    $: numCols = Math.ceil(\r\n        Math.sqrt(initialPaxCount * (innerWidth / innerHeight)),\r\n    );\r\n    $: numRows = Math.ceil(initialPaxCount / numCols);\r\n\r\n    // Calculate available space after accounting for gaps\r\n    $: totalGapX = (numCols - 1) * gap;\r\n    $: totalGapY = (numRows - 1) * gap;\r\n\r\n    // Compute the width and height of each rectangle, accounting for gaps\r\n    $: rectWidth = (innerWidth - totalGapX) / numCols;\r\n    $: rectHeight = (innerHeight - totalGapY) / numRows;\r\n\r\n    // Function to construct the class string\r\n    function getClassString(paxItem) {\r\n        let classes = [\"agt\"];\r\n\r\n        // Add classes based on conditions\r\n        if (paxItem.GeWom === \"1\") {\r\n            classes.push(\"gender\");\r\n        } else {\r\n            classes.push(\"non_gender\");\r\n        }\r\n\r\n        if (paxItem.WggPar === \"1\") {\r\n            classes.push(\"participation\");\r\n        }\r\n\r\n        if (paxItem.WggImplSign === \"1\") {\r\n            classes.push(\"signing\");\r\n        }\r\n\r\n        // Return the concatenated string of classes\r\n        return classes.join(\" \");\r\n    }\r\n\r\n</script>\r\n\r\n{#if current_pax}\r\n    <div class=\"wrapper\" bind:clientWidth={width} bind:clientHeight={height}>\r\n        <svg {width} {height}>\r\n            <g\r\n                class=\"inner_chart\"\r\n                transform=\"translate({margin.left}, {margin.top})\"\r\n            >\r\n                {#each current_pax as paxItem, i (i)}\r\n                    <!-- Calculate col and row based on the index -->\r\n                    <path\r\n                        d={lineGenerator(\r\n                            generateHandwrittenLine(\r\n                                (i % numCols) * (rectWidth + gap), // X position remains the same\r\n                                innerHeight -\r\n                                    (Math.floor(i / numCols) + 1) *\r\n                                        (rectHeight + gap), // Invert Y position\r\n                                rectWidth,\r\n                            ),\r\n                        )}\r\n                        fill=\"none\"\r\n                        stroke=\"black\"\r\n                        stroke-width=\"1\"\r\n                        class={getClassString(paxItem)}\r\n                    />\r\n                {/each}\r\n            </g>\r\n        </svg>\r\n    </div>\r\n{/if}\r\n\r\n<style>\r\n    .wrapper {\r\n        height: 90vh;\r\n        position: relative;\r\n    }\r\n</style>\r\n",
    "<script>\r\n    import { getContext } from \"svelte\";\r\n    import * as geo from \"d3-geo\";\r\n    import * as d3 from \"d3\";\r\n\r\n    const { data, width, height } = getContext(\"LayerCake\");\r\n\r\n    export let projectionName = \"geoNaturalEarth1\";\r\n    export let features = $data.features;\r\n    export let cumulative_isos;\r\n\r\n    $: if (cumulative_isos) {\r\n        let filteredIsos = cumulative_isos.filter((iso) => iso !== \"\");\r\n        d3.selectAll(\".country\").style(\"fill\", \"white\");\r\n        filteredIsos.forEach((iso) => {\r\n            d3.selectAll(\".\" + iso).style(\"fill\", \"gray\");\r\n        });\r\n    }\r\n\r\n    /* --------------------------------------------\r\n     * Add this in case you want to plot only a subset of the features\r\n     * while keeping the zoom on the whole geojson feature set\r\n     */\r\n\r\n    $: projection = geo[projectionName]().fitSize([$width, $height - 100], $data);\r\n\r\n    $: geoPath = geo.geoPath(projection);\r\n\r\n    function fillRandom(random) {\r\n        // console.log(random.properties.ADMIN);\r\n\r\n        const colors = [\"#ffdecc\", \"#ffc09c\", \"#ffa06b\", \"#ff7a33\"];\r\n        const index = Math.round(random * (colors.length - 1));\r\n        return colors[index];\r\n    }\r\n\r\n    function polygon_hover(feature) {\r\n        // console.log(feature);\r\n    }\r\n</script>\r\n\r\n<g class=\"map-group\">\r\n    {#each features as feature}\r\n        <path\r\n            class={\"country \" + feature.properties.adm0_iso}\r\n            fill=\"white\"\r\n            d={geoPath(feature)}\r\n            on:mouseenter={polygon_hover(feature)}\r\n        ></path>\r\n    {/each}\r\n</g>\r\n\r\n<style>\r\n    .country {\r\n        stroke:black;\r\n        stroke-width: 0.5px;\r\n    }\r\n</style>\r\n",
    "<script>\r\n    import IndividualText from \"./IndividualText.svelte\";\r\n\r\n    export let pax_gender;\r\n\r\n    let width = 400;\r\n    let height = 400;\r\n\r\n    const margin = {\r\n        top: 10,\r\n        right: 10,\r\n        bottom: 10,\r\n        left: 10,\r\n    };\r\n\r\n    const totalRectangles = 436;\r\n    const gap = 4; // Gap between rectangles\r\n\r\n    let numCols, numRows;\r\n\r\n    // Reactive calculation of rows, columns, and rectangle dimensions\r\n    $: {\r\n        numCols = Math.ceil(Math.sqrt(totalRectangles));\r\n        numRows = Math.ceil(totalRectangles / numCols);\r\n    }\r\n\r\n    // Reactive generation of rectangle data (x, y, width, height)\r\n    let rectangles;\r\n    $: if (pax_gender) {\r\n        rectangles = pax_gender.map((item, i) => {\r\n            const maxNCharacters = +item.corr_char_no; // Total characters\r\n            const womCharacters = +item.text.length; // Women characters\r\n\r\n            // if (womCharacters > maxNCharacters/2) {\r\n            //     console.log(womCharacters, maxNCharacters, item);\r\n            // }\r\n\r\n            const rectWidth =\r\n                (width - margin.left - margin.right) / numCols - gap;\r\n\r\n            const rectHeight =\r\n                (height - margin.top - margin.bottom) / numRows - gap;\r\n\r\n            // Full area for the maximum number of characters\r\n            const fullArea = rectWidth * rectHeight;\r\n\r\n            // Calculate the height (wHeight) that corresponds to womCharacters\r\n            const wArea = (womCharacters / maxNCharacters) * fullArea;\r\n            const wHeight = wArea / rectWidth; // Since width remains the same\r\n\r\n            return {\r\n                x: (i % numCols) * (rectWidth + gap) + margin.left,\r\n                y: Math.floor(i / numCols) * (rectHeight + gap) + margin.top,\r\n                width: rectWidth,\r\n                height: rectHeight,\r\n                wHeight: wHeight, // Height representing womCharacters\r\n            };\r\n        });\r\n    }\r\n\r\n</script>\r\n\r\n{#if rectangles}\r\n    <div class=\"wrapper\" bind:clientWidth={width} bind:clientHeight={height}>\r\n        <svg {width} {height}>\r\n            {#each rectangles as rect}\r\n            <IndividualText\r\n                    x={rect.x}\r\n                    y={rect.y}\r\n                    {rect} />\r\n\r\n            {/each}\r\n        </svg>\r\n    </div>\r\n{/if}\r\n\r\n<style>\r\n    .wrapper {\r\n        height: 90vh;\r\n        position: relative;\r\n    }\r\n</style>\r\n",
    "<script>\r\n    import * as d3 from \"d3\";\r\n    import IndividualLine from \"./IndividualLine.svelte\";\r\n    import { LayerCake, Svg } from \"layercake\";\r\n    import Map from \"./Map.svelte\";\r\n    import Point from \"./Point.svelte\";\r\n\r\n    export let mygeojson;\r\n    export let pax_gender_timeline;\r\n    export let pax_timeline;\r\n    export let pax_gender;\r\n    export let step;\r\n    export let central_points;\r\n\r\n    let width = 400;\r\n    let height = 400;\r\n    let current_pax;\r\n    let current_years;\r\n    let current_central_points;\r\n    let reorder = true;\r\n    let innerWidth, innerHeight, xScale, yScale;\r\n    const margin = { top: 20, right: 20, bottom: 20, left: 40 };\r\n\r\n    let years = [\r\n        \"1990\",\r\n        \"1991\",\r\n        \"1992\",\r\n        \"1993\",\r\n        \"1994\",\r\n        \"1995\",\r\n        \"1996\",\r\n        \"1997\",\r\n        \"1998\",\r\n        \"1999\",\r\n        \"2000\",\r\n        \"2001\",\r\n        \"2002\",\r\n        \"2003\",\r\n        \"2004\",\r\n        \"2005\",\r\n        \"2006\",\r\n        \"2007\",\r\n        \"2008\",\r\n        \"2009\",\r\n        \"2010\",\r\n        \"2011\",\r\n        \"2012\",\r\n        \"2013\",\r\n        \"2014\",\r\n        \"2015\",\r\n        \"2016\",\r\n        \"2017\",\r\n        \"2018\",\r\n        \"2019\",\r\n        \"2020\",\r\n        \"2021\",\r\n        \"2022\",\r\n        \"2023\",\r\n    ];\r\n    let most_women = [\r\n        \"2015\",\r\n        \"2016\",\r\n        \"2008\",\r\n        \"2014\",\r\n        \"2013\",\r\n        \"2003\",\r\n        \"2006\",\r\n        \"2011\",\r\n        \"2004\",\r\n        \"2018\",\r\n        \"1996\",\r\n        \"2002\",\r\n        \"2012\",\r\n        \"2019\",\r\n        \"1994\",\r\n        \"1995\",\r\n        \"1999\",\r\n        \"1993\",\r\n        \"2005\",\r\n        \"2007\",\r\n        \"2021\",\r\n        \"2001\",\r\n        \"2020\",\r\n        \"2023\",\r\n        \"1991\",\r\n        \"1998\",\r\n        \"2009\",\r\n        \"2000\",\r\n        \"2010\",\r\n        \"2017\",\r\n        \"2022\",\r\n        \"1992\",\r\n        \"1997\",\r\n        \"1990\",\r\n    ];\r\n\r\n    $: innerWidth = width - margin.left - margin.right;\r\n    $: innerHeight = height - margin.top - margin.bottom;\r\n\r\n    $: xScale = d3\r\n        .scaleBand()\r\n        .domain(years)\r\n        .range([0, innerWidth])\r\n        .padding(0.1);\r\n\r\n    $: yScale = d3.scaleLinear().domain([0, 100]).range([200, 0]);\r\n\r\n    let current_isos;\r\n    let cumulative_isos;\r\n    function get_current_central_points(pax) {\r\n        current_isos = pax[0][1]\r\n            .map((d) => {\r\n                if (d.GeWom == \"1\") {\r\n                    return d.Loc1ISO;\r\n                }\r\n            })\r\n            .filter((iso) => iso !== undefined && iso !== null);\r\n\r\n        // Create the new array of objects\r\n        let points = current_isos\r\n            .map((code) => {\r\n                // Find the matching country object\r\n                const country = central_points.find((c) => c.iso_code === code);\r\n\r\n                if (country) {\r\n                    return {\r\n                        name: country.name,\r\n                        code: code,\r\n                        longitude: +country.central_longitude,\r\n                        latitude: +country.central_latitude,\r\n                    };\r\n                } else {\r\n                    // Return null or any fallback in case no match is found\r\n                    return null;\r\n                }\r\n            })\r\n            .filter((item) => item !== null); // Remove null entries\r\n\r\n        return points;\r\n    }\r\n\r\n    function get_current_isos(data) {\r\n        const combinedArray = data.reduce(\r\n            (acc, yearArray) => [...acc, ...yearArray[1]],\r\n            [],\r\n        );\r\n        const matchingLoc1ISO = combinedArray\r\n            .filter((d) => d.GeWom === \"1\")\r\n            .map((d) => d.Loc1ISO);\r\n\r\n        return matchingLoc1ISO;\r\n    }\r\n\r\n    // wait till pax_timeline is loaded\r\n    $: if (pax_timeline) {\r\n        //initial timeline data\r\n        current_pax = [pax_timeline[0]];\r\n        current_years = pax_timeline.map((d) => d[0]);\r\n        current_central_points = get_current_central_points(current_pax);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    }\r\n\r\n    $: if (step == \"1\") {\r\n        console.log(\"1990\");\r\n        current_pax = pax_timeline.slice(0, 1);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"2\") {\r\n        console.log(\"1991\");\r\n        current_pax = pax_timeline.slice(0, 2);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"3\") {\r\n        console.log(\"1992\");\r\n        current_pax = pax_timeline.slice(0, 3);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"4\") {\r\n        console.log(\"1993\");\r\n        current_pax = pax_timeline.slice(0, 4);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"5\") {\r\n        console.log(\"1994\");\r\n        current_pax = pax_timeline.slice(0, 5);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"6\") {\r\n        console.log(\"1995\");\r\n        current_pax = pax_timeline.slice(0, 6);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"7\") {\r\n        console.log(\"1996\");\r\n        current_pax = pax_timeline.slice(0, 7);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"8\") {\r\n        console.log(\"1997\");\r\n        current_pax = pax_timeline.slice(0, 8);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"9\") {\r\n        console.log(\"1998\");\r\n        current_pax = pax_timeline.slice(0, 9);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"10\") {\r\n        console.log(\"1999\");\r\n        current_pax = pax_timeline.slice(0, 10);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"11\") {\r\n        console.log(\"2000\");\r\n        current_pax = pax_timeline.slice(0, 11);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"12\") {\r\n        console.log(\"2001\");\r\n        current_pax = pax_timeline.slice(0, 12);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"13\") {\r\n        console.log(\"2002\");\r\n        current_pax = pax_timeline.slice(0, 13);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"14\") {\r\n        console.log(\"2003\");\r\n        current_pax = pax_timeline.slice(0, 14);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"15\") {\r\n        console.log(\"2004\");\r\n        current_pax = pax_timeline.slice(0, 15);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"16\") {\r\n        console.log(\"2005\");\r\n        current_pax = pax_timeline.slice(0, 16);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"17\") {\r\n        console.log(\"2006\");\r\n        current_pax = pax_timeline.slice(0, 17);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"18\") {\r\n        console.log(\"2007\");\r\n        current_pax = pax_timeline.slice(0, 18);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"19\") {\r\n        console.log(\"2008\");\r\n        current_pax = pax_timeline.slice(0, 19);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"20\") {\r\n        console.log(\"2009\");\r\n        current_pax = pax_timeline.slice(0, 20);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"21\") {\r\n        console.log(\"2010\");\r\n        current_pax = pax_timeline.slice(0, 21);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"22\") {\r\n        console.log(\"2011\");\r\n        current_pax = pax_timeline.slice(0, 22);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"23\") {\r\n        console.log(\"2012\");\r\n        current_pax = pax_timeline.slice(0, 23);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"24\") {\r\n        console.log(\"2013\");\r\n        current_pax = pax_timeline.slice(0, 24);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"25\") {\r\n        console.log(\"2014\");\r\n        current_pax = pax_timeline.slice(0, 25);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"26\") {\r\n        console.log(\"2015\");\r\n        current_pax = pax_timeline.slice(0, 26);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"27\") {\r\n        console.log(\"2016\");\r\n        current_pax = pax_timeline.slice(0, 27);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"28\") {\r\n        console.log(\"2017\");\r\n        current_pax = pax_timeline.slice(0, 28);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"29\") {\r\n        console.log(\"2018\");\r\n        current_pax = pax_timeline.slice(0, 29);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"30\") {\r\n        console.log(\"2019\");\r\n        current_pax = pax_timeline.slice(0, 30);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"31\") {\r\n        console.log(\"2020\");\r\n        current_pax = pax_timeline.slice(0, 31);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"32\") {\r\n        console.log(\"2021\");\r\n        current_pax = pax_timeline.slice(0, 32);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"33\") {\r\n        current_pax = pax_timeline.slice(0, 33);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"34\") {\r\n        console.log(\"2023\");\r\n        reorder = true;\r\n        years = current_years;\r\n        current_pax = pax_timeline.slice(0, 34);\r\n        current_central_points = get_current_central_points([\r\n            current_pax[current_pax.length - 1],\r\n        ]);\r\n        cumulative_isos = get_current_isos(current_pax);\r\n    } else if (step == \"35\") {\r\n        console.log(\"reorder\");\r\n        reorder = true;\r\n        years = most_women;\r\n    }\r\n\r\n    function formatMobile(tick) {\r\n        return \"'\" + tick.toString().slice(-2);\r\n    }\r\n</script>\r\n\r\n{#if current_pax}\r\n    <div class=\"wrapper\" bind:clientWidth={width} bind:clientHeight={height}>\r\n        {#if mygeojson}\r\n            <LayerCake data={mygeojson}>\r\n                <Svg>\r\n                    <Map\r\n                        projectionName={\"geoNaturalEarth1\"}\r\n                        {cumulative_isos}\r\n                    />\r\n                    <Point\r\n                        projectionName={\"geoNaturalEarth1\"}\r\n                        pointsData={current_central_points}\r\n                    />\r\n                    <g\r\n                        transform=\"translate({margin.left}, {innerHeight -\r\n                            150})\"\r\n                    >\r\n                        <g class=\"axis x-axis\">\r\n                            {#each years as tick}\r\n                                <g\r\n                                    class=\"tick tick-{tick}\"\r\n                                    transform=\"translate({xScale(tick) +\r\n                                        xScale.bandwidth() / 2},{220})\"\r\n                                >\r\n                                    <text y=\"-2\"\r\n                                        >{innerWidth > 380\r\n                                            ? tick\r\n                                            : formatMobile(tick)}</text\r\n                                    >\r\n                                </g>\r\n                            {/each}\r\n                        </g>\r\n\r\n                        {#each current_pax as [year, entries]}\r\n                            <IndividualLine\r\n                                x={xScale(year)}\r\n                                y={yScale(entries.length)}\r\n                                {innerHeight}\r\n                                width={xScale.bandwidth()}\r\n                                {entries}\r\n                                {reorder}\r\n                            />\r\n                        {/each}\r\n                    </g>\r\n                </Svg>\r\n            </LayerCake>\r\n        {/if}\r\n        <!-- <svg {width} {height}>\r\n            <g transform=\"translate({margin.left}, {innerHeight - 200})\">\r\n                <g class=\"axis x-axis\">\r\n                    {#each years as tick}\r\n                        <g\r\n                            class=\"tick tick-{tick}\"\r\n                            transform=\"translate({xScale(tick) +\r\n                                xScale.bandwidth() / 2},{235})\"\r\n                        >\r\n                            <text y=\"-2\"\r\n                                >{innerWidth > 380\r\n                                    ? tick\r\n                                    : formatMobile(tick)}</text\r\n                            >\r\n                        </g>\r\n                    {/each}\r\n                </g>\r\n\r\n                {#each current_pax as [year, entries]}\r\n                    <IndividualLine\r\n                        x={xScale(year)}\r\n                        y={yScale(entries.length)}\r\n                        {innerHeight}\r\n                        width={xScale.bandwidth()}\r\n                        {entries}\r\n                        {reorder}\r\n                    />\r\n                {/each}\r\n            </g>\r\n        </svg> -->\r\n    </div>\r\n{/if}\r\n\r\n<style>\r\n    .wrapper {\r\n        height: 90vh;\r\n        position: relative;\r\n    }\r\n    .tick {\r\n        font-size: 0.725em;\r\n        font-weight: 200;\r\n    }\r\n\r\n    .tick text {\r\n        fill: black;\r\n        text-anchor: start;\r\n        font-size: 10px;\r\n    }\r\n\r\n    .x-axis .tick text {\r\n        text-anchor: middle;\r\n    }\r\n</style>\r\n"
  ],
  "names": [],
  "mappings": "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"
}